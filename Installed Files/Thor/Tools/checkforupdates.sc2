*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="checkforupdates.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Grid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.checkbox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.Label" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column7.checkbox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Label" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInstall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtNotes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Splitter" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getmonitorstatistics
		*m: sortcolumn
		*p: ccolumnorder
		*p: ccolumnwidths
		*p: lnoupdates
		*p: lresult
		*p: nsplittertop
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Thor: Update Status"
		ccolumnorder = 
		ccolumnwidths = 
		Desktop = .T.
		DoCreate = .T.
		Height = 365
		Icon = thor.ico
		Left = 0
		lnoupdates = .F.
		lresult = .F.
		Name = "Form1"
		nsplittertop = 0
		Top = 0
		Visible = .T.
		Width = 959
		WindowType = 1
		_memberdata = <VFPData>
			<memberdata name="lresult" display="lResult"/>
			<memberdata name="ccolumnorder" display="cColumnOrder"/>
			<memberdata name="ccolumnwidths" display="cColumnWidths"/>
			<memberdata name="lnoupdates" display="lNoUpdates"/>
			<memberdata name="nsplittertop" display="nSplitterTop"/>
			<memberdata name="getmonitorstatistics" display="GetMonitorStatistics"/>
			<memberdata name="sortcolumn" display="SortColumn"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Anchor = 12, ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 28, ;
		Left = 730, ;
		Name = "cmdCancel", ;
		TabIndex = 2, ;
		Top = 334, ;
		Width = 77
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdInstall' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Install Updates", ;
		Default = .T., ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 28, ;
		Left = 19, ;
		Name = "cmdInstall", ;
		TabIndex = 1, ;
		Top = 334, ;
		Width = 126
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtNotes' AS editbox WITH ;
		Anchor = 14, ;
		BorderColor = 192,192,192, ;
		BorderStyle = 1, ;
		ControlSource = "", ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Height = 78, ;
		IntegralHeight = .F., ;
		Left = 12, ;
		Name = "edtNotes", ;
		ReadOnly = .T., ;
		Top = 252, ;
		Width = 942
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Grid1' AS grid WITH ;
		Anchor = 15, ;
		ColumnCount = 8, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		HeaderHeight = 24, ;
		Height = 236, ;
		HighlightRowLineWidth = 1, ;
		Left = 12, ;
		Name = "Grid1", ;
		Panel = 1, ;
		RecordMark = .F., ;
		RecordSource = "crsr_ThorUpdates", ;
		RowHeight = 22, ;
		TabIndex = 3, ;
		Top = 6, ;
		Width = 942, ;
		Column1.ColumnOrder = 2, ;
		Column1.ControlSource = "Trim(crsr_ThorUpdates.AppName)+IIF(crsr_ThorUpdates.FromMyUpdates,'  (My Updates)','')", ;
		Column1.DynamicFontUnderline = "Not empty(crsr_ThorUpdates.Link)", ;
		Column1.DynamicForeColor = "IIF(Empty(crsr_ThorUpdates.Link), RGB(0,0,0), RGB(0,0,255))", ;
		Column1.FontSize = 9, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 175, ;
		Column2.ColumnOrder = 8, ;
		Column2.ControlSource = "crsr_ThorUpdates.ProjectType", ;
		Column2.FontSize = 9, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Visible = .T., ;
		Column2.Width = 80, ;
		Column3.ColumnOrder = 5, ;
		Column3.ControlSource = "Alltrim(crsr_ThorUpdates.Status)", ;
		Column3.FontSize = 9, ;
		Column3.Name = "Column4", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 120, ;
		Column4.ColumnOrder = 1, ;
		Column4.ControlSource = "crsr_ThorUpdates.UpdateNow", ;
		Column4.DynamicCurrentControl = "", ;
		Column4.FontSize = 9, ;
		Column4.Name = "Column6", ;
		Column4.Sparse = .F., ;
		Column4.Width = 55, ;
		Column5.ColumnOrder = 6, ;
		Column5.ControlSource = "crsr_ThorUpdates.NeverUpdate", ;
		Column5.FontSize = 9, ;
		Column5.Name = "Column7", ;
		Column5.Sparse = .F., ;
		Column5.Width = 89, ;
		Column6.ColumnOrder = 7, ;
		Column6.ControlSource = "crsr_ThorUpdates.InstalledVerNumber", ;
		Column6.DynamicCurrentControl = 'Iif(Empty(crsr_ThorUpdates.LinkPrompt), "label", "text1")', ;
		Column6.FontSize = 9, ;
		Column6.Name = "Column9", ;
		Column6.Width = 180, ;
		Column7.ColumnOrder = 3, ;
		Column7.ControlSource = "crsr_ThorUpdates.Vernumber", ;
		Column7.Name = "Column3", ;
		Column7.Width = 100, ;
		Column8.Alignment = 2, ;
		Column8.ColumnOrder = 4, ;
		Column8.ControlSource = "crsr_ThorUpdates.Verdate", ;
		Column8.Name = "Column5", ;
		Column8.Width = 90
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'Grid1.Column1.Header1' AS header WITH ;
		Caption = "Application / Link to home page", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BackStyle = 0, ;
		BorderColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column2.Header1' AS header WITH ;
		Caption = "Type", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column2.Text1' AS textbox WITH ;
		BackStyle = 0, ;
		BorderColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "crsr_ThorUpdates.ProjectType", ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T., ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column3.Header1' AS header WITH ;
		Caption = "Version", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column4.Header1' AS header WITH ;
		Caption = "Status", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Date", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column5.Text1' AS textbox WITH ;
		Alignment = 2, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column6.checkbox' AS checkbox WITH ;
		Alignment = 2, ;
		BackStyle = 0, ;
		Caption = "", ;
		Centered = .T., ;
		DisabledForeColor = 255,255,255, ;
		FontSize = 9, ;
		Name = "checkbox", ;
		SpecialEffect = 1
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Grid1.Column6.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Update", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column6.Label' AS label WITH ;
		BackStyle = 0, ;
		Caption = "", ;
		DisabledForeColor = 255,255,255, ;
		Name = "Label"
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Grid1.Column7.checkbox' AS checkbox WITH ;
		Alignment = 2, ;
		BackStyle = 0, ;
		Caption = "", ;
		Centered = .T., ;
		DisabledForeColor = 255,255,255, ;
		FontSize = 9, ;
		Name = "checkbox"
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Grid1.Column7.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Never Update", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column9.Header1' AS header WITH ;
		Caption = "Installed Version", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column9.Label' AS label WITH ;
		Caption = "", ;
		Name = "Label"
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Grid1.Column9.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		FontUnderline = .F., ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		MousePointer = 15, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Label1' AS label WITH ;
		Alignment = 2, ;
		Anchor = 4, ;
		Caption = "Warning: CLEAR ALL and CLOSE ALL are executed when you install updates", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 18, ;
		Left = 159, ;
		Name = "Label1", ;
		TabIndex = 4, ;
		Top = 342, ;
		Width = 500
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Splitter' AS thor_sfsplitterv WITH ;
		cobject1name = Grid1, ;
		cobject2name = edtNotes, ;
		Height = 10, ;
		Left = 12, ;
		lshowgripper = .T., ;
		Name = "Splitter", ;
		nobject1minsize = 150, ;
		nobject2minsize = 50, ;
		Top = 242, ;
		Visible = .T., ;
		Width = 951, ;
		GRIPPER.GripperDot1.Name = "GripperDot1", ;
		GRIPPER.GripperDot1.ShapeDark.Name = "ShapeDark", ;
		GRIPPER.GripperDot1.ShapeLight.Name = "ShapeLight", ;
		GRIPPER.GripperDot1.ShapeMiddle.Name = "ShapeMiddle", ;
		GRIPPER.GripperDot2.Name = "GripperDot2", ;
		GRIPPER.GripperDot2.ShapeDark.Name = "ShapeDark", ;
		GRIPPER.GripperDot2.ShapeLight.Name = "ShapeLight", ;
		GRIPPER.GripperDot2.ShapeMiddle.Name = "ShapeMiddle", ;
		GRIPPER.GripperDot3.Name = "GripperDot3", ;
		GRIPPER.GripperDot3.ShapeDark.Name = "ShapeDark", ;
		GRIPPER.GripperDot3.ShapeLight.Name = "ShapeLight", ;
		GRIPPER.GripperDot3.ShapeMiddle.Name = "ShapeMiddle", ;
		GRIPPER.GripperDot4.Name = "GripperDot4", ;
		GRIPPER.GripperDot4.ShapeDark.Name = "ShapeDark", ;
		GRIPPER.GripperDot4.ShapeLight.Name = "ShapeLight", ;
		GRIPPER.GripperDot4.ShapeMiddle.Name = "ShapeMiddle", ;
		GRIPPER.GripperDot5.Name = "GripperDot5", ;
		GRIPPER.GripperDot5.ShapeDark.Name = "ShapeDark", ;
		GRIPPER.GripperDot5.ShapeLight.Name = "ShapeLight", ;
		GRIPPER.GripperDot5.ShapeMiddle.Name = "ShapeMiddle", ;
		GRIPPER.Name = "GRIPPER"
		*< END OBJECT: ClassLib="thor_sfsplitter.vcx" BaseClass="container" />
	
	PROCEDURE Destroy
		Local lnI
		
		If Not Isnull(This.oSettings)
			This.cColumnWidths	= ''
			This.cColumnOrder	= ''
			This.nSplitterTop = This.Splitter.Top 
		
			With This.grid1
				For lnI = 1 To .ColumnCount
					With .Columns[lnI]
						This.cColumnWidths	= This.cColumnWidths + Transform (.Width) + ','
						This.cColumnOrder	= This.cColumnOrder + Transform (.ColumnOrder ) + ','
					Endwith
				Endfor
			Endwith && this.grid1
		
			This.oSettings.Save (This)
		Endif
		
		This.oSettings = .Null.
		
	ENDPROC

	PROCEDURE getmonitorstatistics
		****************************************
		***  Function: Returns information about the desktop screen
		***            Can be used to check for desktop width and size
		***            and determine when a second monitor is disabled
		***            and layout needs to be adjusted to keep the
		***            window visible.
		***      Pass:
		***    Return:  Monitor Object
		***
		*** From https://west-wind.com/wconnect/weblog/ShowEntry.blog?id=836
		*** Handling Multiple Screens in Visual FoxPro Desktop Applications
		***
		************************************************************************
		
			#Define SM_CXFULLSCREEN		16
			#Define SM_CYFULLSCREEN		17
		
			#Define SM_XVIRTUALSCREEN	76
			#Define SM_YVIRTUALSCREEN	77
			#Define SM_CXVIRTUALSCREEN	78
			#Define SM_CYVIRTUALSCREEN	79
			#Define SM_CMONITORS		80
		
			#Define SM_XVIRTUALSCREEN	76
			#Define SM_YVIRTUALSCREEN	77
			#Define SM_CXVIRTUALSCREEN	78
			#Define SM_CYVIRTUALSCREEN	79
		
		
			Local;
				loMonitor As "EMPTY"
		
			Declare Integer GetSystemMetrics In user32 Integer nIndex
		
			loMonitor = Createobject("EMPTY")
		*	AddProperty(loMonitor, "gnMonitors",      GetSystemMetrics(SM_CMONITORS))
		
			AddProperty(m.loMonitor, "gnVirtualLeft",   GetSystemMetrics(SM_XVIRTUALSCREEN))
			AddProperty(m.loMonitor, "gnVirtualTop",    GetSystemMetrics(SM_YVIRTUALSCREEN))
		
			AddProperty(m.loMonitor, "gnVirtualWidth",  GetSystemMetrics(SM_CXVIRTUALSCREEN))
			AddProperty(m.loMonitor, "gnVirtualHeight", GetSystemMetrics(SM_CYVIRTUALSCREEN))
		
			AddProperty(m.loMonitor, "gnVirtualRight",  m.loMonitor.gnVirtualWidth -  Abs(m.loMonitor.gnVirtualLeft) - 10)
			AddProperty(m.loMonitor, "gnVirtualBottom", m.loMonitor.gnVirtualHeight - Abs(m.loMonitor.gnVirtualTop)  -  5)
		
		*ADDPROPERTY(loMonitor, "gnScreenHeight",  GetSystemMetrics(SM_CYFULLSCREEN))
		*ADDPROPERTY(loMonitor, "gnScreenWidth",   GetSystemMetrics(SM_CXFULLSCREEN))
		
			Return m.loMonitor
		
	ENDPROC

	PROCEDURE Init
		* ThorFormSettings home page = http://vfpx.codeplex.com/wikipage?title=Thor%20Framework%20FormSettings
		Local laColumnOrder[1], laColumnWidths[1], lnI, loSettings
		
		loSettings = Execscript (_Screen.cThorDispatcher, 'Class= ThorFormSettings', 'Thor Install Updates Settings')
		Thisform.AddProperty ('oSettings', loSettings)
		
		This.MinWidth  = This.Width
		This.MinHeight = This.Height
		
		*!*	changed by: SF 1.4.2023
		*!*	<pdm>
		*!*	<change date="{^2023-04-01,17:21:00}">changed by: SF<br />
		*!*	Try to move form into visible area if on multi-monitor setup with _VFP not on main monitor
		*!*	This part helps to get a good start before reading settings stored. Else it will be odd.
		*!*	</change>
		*!*	</pdm>
		
		If This.Desktop Or This.Dockable=1 Then
		*Move forms with this setting into screen, might be odd on multiple monitors
		
		*get coords of vfp
			This.Top  = _Screen.Top
			This.Left = _Screen.Left
		*twice, first reads odd values
			This.Top  = _Screen.Top
			This.Left = _Screen.Left
		Endif &&This.Desktop Or This.Dockable=1
		
		*!*	/changed by: SF 1.4.2023
		
		
		If Not Isnull(loSettings)
			loSettings.Restore (Thisform) && Gets top, left, height, width
		
			loSettings.Restore (Thisform, 'cColumnWidths, cColumnOrder, nSplitterTop') && and two other properties
		
		*!*	changed by: SF 1.4.2023
		*!*	<pdm>
		*!*	<change date="{^2023-04-01,17:21:00}">changed by: SF<br />
		*!*	Try to move form into visible area if on multi-monitor setup with _VFP not on main monitor
		*!*	This part moves the form into _SCREEN, if partial out of visble area.
		*!*	</change>
		*!*	</pdm>
		
		*********
			lnTop          = 0
			lnHeight       = This.Height
			lnLeft         = 0
			lnWidth        = This.Width
		
			lnScreenTop    = 0
			lnScreenBottom = _Screen.Height
			lnScreenLeft   = 0
			lnScreenRight  = _Screen.Width
		
			If This.Desktop Or This.Dockable=1 Then
				loMonitor = This.GetMonitorStatistics()
		
				lnTop          = _Screen.Top
				lnLeft         = _Screen.Left
		
				lnScreenTop    = m.loMonitor.gnVirtualTop
				lnScreenBottom = m.loMonitor.gnVirtualBottom
				lnScreenLeft   = m.loMonitor.gnVirtualLeft
				lnScreenRight  = m.loMonitor.gnVirtualRight
		
			Endif &&This.Desktop Or This.Dockable=1
		
			If Between(This.Top , m.lnScreenTop, m.lnScreenBottom) Then
				lnTop    = This.Top
				lnHeight = This.Height
			Endif &&Between(This.Top , m.lnScreenTop, m.lnScreenBottom)
		
			If Between(This.Left, m.lnScreenLeft, m.lnScreenRight) Then
				lnLeft   = This.Left
				lnWidth  = This.Width
			Endif &&Between(This.Left, m.lnScreenLeft, m.lnScreenRight)
		
			Thisform.Move(m.lnLeft, m.lnTop, m.lnWidth, m.lnHeight)
		
			This.Resize()
		*!*	/changed by: SF 1.4.2023
		
		Endif
	ENDPROC

	PROCEDURE Show
		Lparameters nStyle
		
		DoDefault (nStyle)
		If This.nSplitterTop # 0
			This.Splitter.MoveSplitterToPosition (This.nSplitterTop)
		Endif
		
	ENDPROC

	PROCEDURE sortcolumn
		Lparameters lcField
		
		Local lcIndexFile
		
		Delete Tag all 
		
		lcIndexFile = Sys(2023) + '\_SB_Temp' + Sys(2015)
		Index On &lcField Tag Tag
		Goto top
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE Unload
		Return This.lResult 
	ENDPROC

	PROCEDURE cmdCancel.Click
		Thisform.lResult = .F.
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdCancel.Init
		If Thisform.lNoUpdates 
			This.Caption = 'Close'
		Endif
		
	ENDPROC

	PROCEDURE cmdInstall.Click
		Thisform.lResult = .T.
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdInstall.Init
		This.Visible = Not Thisform.lNoUpdates 
		
		
	ENDPROC

	PROCEDURE edtNotes.Refresh
		Local lcNote, lcVersion, lnPos
		lcNote = crsr_ThorUpdates.Notes
		
		If Empty (lcNote)
			lcVersion = Alltrim (Evl (crsr_ThorUpdates.AvailableVerNumber, crsr_ThorUpdates.InstalledVerNumber)) 
			If '(' $ lcVersion
				lnPos  = Rat ('(', lcVersion)
				lcNote = 'Version ' + Trim (Left (lcVersion, lnPos - 1)) + ', released ' + Chrtran (Substr (lcVersion, lnPos), '()', '')
			Else
				lcNote = 'Version ' + lcNote
			EndIf
			lcNote = Alltrim(crsr_ThorUpdates.AppName) + ' ' + lcNote
		Endif
		
		This.Value = lcNote
	ENDPROC

	PROCEDURE Grid1.AfterRowColChange
		LPARAMETERS nColIndex
		
		Thisform.edtNotes.Refresh()
		
	ENDPROC

	PROCEDURE Grid1.Column1.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.AppName')
		
	ENDPROC

	PROCEDURE Grid1.Column1.Text1.Click
		Local lcLink, loLink
		lcLink = Alltrim (Link)
		If Not Empty (lcLink)
			loLink = Newobject ('_ShellExecute', Home() + 'FFC\_Environ.vcx')
			loLink.ShellExecute (lcLink)
		Endif
		
	ENDPROC

	PROCEDURE Grid1.Column2.Text1.When
		Return .f.
	ENDPROC

	PROCEDURE Grid1.Column4.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.SortKey')
	ENDPROC

	PROCEDURE Grid1.Column5.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.Verdate Desc')
		
	ENDPROC

	PROCEDURE Grid1.Column6.checkbox.Valid
		This.Parent.Parent.Refresh()
		
	ENDPROC

	PROCEDURE Grid1.Column6.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.UpdateNow Desc')
	ENDPROC

	PROCEDURE Grid1.Column7.checkbox.Valid
		Local lcFileName
		This.Parent.Parent.Refresh()
		lcFileName = Trim (NeverUpdateFile)
		Do Case
			Case This.Value And Not File (lcFileName)
				Strtofile ('No more updating', lcFileName)
			Case File (lcFileName) And Not (This.Value)
				Erase (lcFileName)
		Endcase
		
	ENDPROC

	PROCEDURE Grid1.Column7.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.NeverUpdate Desc')
	ENDPROC

	PROCEDURE Grid1.Column9.Text1.Click
		Local lcLink, loLink
		lcLink = Alltrim (Link)
		If Not Empty (lcLink)
			loLink = Newobject ('_ShellExecute', Home() + 'FFC\_Environ.vcx')
			loLink.ShellExecute (lcLink)
		Endif
		
	ENDPROC

	PROCEDURE Grid1.Init
		This.SetAll('DynamicFontBold', 'crsr_ThorUpdates.UpdateNow', 'Column')
		This.SetAll('DynamicFontItalic', 'crsr_ThorUpdates.FromMyUpdates', 'Column')
		This.SetAll('DynamicBackColor', 'ICase(crsr_ThorUpdates.SortKey="A", Rgb(255,255,0), crsr_ThorUpdates.SortKey="Z", Rgb(192,192,192), crsr_ThorUpdates.SortKey="B", Rgb(165, 203, 247), crsr_ThorUpdates.SortKey="D", Rgb(196, 240, 208), Rgb(255,255,255))', 'Column')
		
	ENDPROC

	PROCEDURE Label1.Init
		If Thisform.lNoUpdates 
			This.Caption = 'No updates available'
		Endif
		
	ENDPROC

ENDDEFINE

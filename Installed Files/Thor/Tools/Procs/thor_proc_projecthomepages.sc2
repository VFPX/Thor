*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_proc_projecthomepages.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Grid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.checkbox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column6.Label" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column7.checkbox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column9.Label" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: createupdatescursor
		*m: sortcolumn
		*p: ccolumnorder
		*p: ccolumnwidths
		*p: lnoupdates
		*p: lresult
		*p: nsplittertop
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BindControls = .F.
		Caption = "Home Pages for VFPX Projects"
		ccolumnorder = 
		ccolumnwidths = 
		DataSession = 2
		Desktop = .T.
		DoCreate = .T.
		Height = 365
		Icon = thor.ico
		Left = 0
		lnoupdates = .F.
		lresult = .F.
		Name = "Form1"
		nsplittertop = 0
		Top = 0
		Visible = .T.
		Width = 433
		WindowType = 0
		_memberdata = <VFPData>
			<memberdata name="lresult" display="lResult"/>
			<memberdata name="ccolumnorder" display="cColumnOrder"/>
			<memberdata name="ccolumnwidths" display="cColumnWidths"/>
			<memberdata name="lnoupdates" display="lNoUpdates"/>
			<memberdata name="nsplittertop" display="nSplitterTop"/>
			<memberdata name="createupdatescursor" display="CreateUpdatesCursor"/>
			<memberdata name="sortcolumn" display="SortColumn"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Grid1' AS grid WITH ;
		Anchor = 15, ;
		ColumnCount = 6, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		GridLines = 2, ;
		HeaderHeight = 24, ;
		Height = 353, ;
		HighlightRowLineWidth = 1, ;
		Left = 12, ;
		Name = "Grid1", ;
		Panel = 1, ;
		RecordMark = .F., ;
		RecordSource = "crsr_ThorUpdates", ;
		RowHeight = 22, ;
		TabIndex = 3, ;
		Top = 6, ;
		Width = 409, ;
		Column1.ColumnOrder = 1, ;
		Column1.ControlSource = "[]", ;
		Column1.FontSize = 9, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Visible = .T., ;
		Column1.Width = 0, ;
		Column2.ColumnOrder = 4, ;
		Column2.ControlSource = "crsr_ThorUpdates.ProjectType", ;
		Column2.FontSize = 9, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Visible = .T., ;
		Column2.Width = 80, ;
		Column3.Alignment = 2, ;
		Column3.ColumnOrder = 3, ;
		Column3.ControlSource = "Alltrim(crsr_ThorUpdates.Status)", ;
		Column3.FontSize = 9, ;
		Column3.Name = "Column4", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 80, ;
		Column4.ColumnOrder = 5, ;
		Column4.ControlSource = "crsr_ThorUpdates.UpdateNow", ;
		Column4.DynamicCurrentControl = "", ;
		Column4.FontSize = 9, ;
		Column4.Name = "Column6", ;
		Column4.Sparse = .F., ;
		Column4.Visible = .F., ;
		Column4.Width = 55, ;
		Column5.ColumnOrder = 6, ;
		Column5.ControlSource = "crsr_ThorUpdates.NeverUpdate", ;
		Column5.FontSize = 9, ;
		Column5.Name = "Column7", ;
		Column5.Sparse = .F., ;
		Column5.Visible = .F., ;
		Column5.Width = 89, ;
		Column6.ColumnOrder = 2, ;
		Column6.ControlSource = "Alltrim(crsr_ThorUpdates.LinkPrompt)", ;
		Column6.DynamicCurrentControl = 'Iif(Empty(crsr_ThorUpdates.LinkPrompt), "label", "text1")', ;
		Column6.FontSize = 9, ;
		Column6.FontUnderline = .T., ;
		Column6.ForeColor = 0,0,255, ;
		Column6.Name = "Column9", ;
		Column6.Width = 175
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'Grid1.Column1.Header1' AS header WITH ;
		Caption = "", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BackStyle = 0, ;
		BorderColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T., ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column2.Header1' AS header WITH ;
		Caption = "Type", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column2.Text1' AS textbox WITH ;
		BackStyle = 0, ;
		BorderColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T., ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Status", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column4.Text1' AS textbox WITH ;
		Alignment = 2, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column6.checkbox' AS checkbox WITH ;
		Alignment = 2, ;
		BackStyle = 0, ;
		Caption = "", ;
		Centered = .T., ;
		DisabledForeColor = 255,255,255, ;
		FontSize = 9, ;
		Name = "checkbox", ;
		SpecialEffect = 1, ;
		Visible = .F.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Grid1.Column6.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Update", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column6.Label' AS label WITH ;
		BackStyle = 0, ;
		Caption = "", ;
		DisabledForeColor = 255,255,255, ;
		Name = "Label"
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Grid1.Column7.checkbox' AS checkbox WITH ;
		Alignment = 2, ;
		BackStyle = 0, ;
		Caption = "", ;
		Centered = .T., ;
		DisabledForeColor = 255,255,255, ;
		FontSize = 9, ;
		Name = "checkbox", ;
		Visible = .F.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Grid1.Column7.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Never Update", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column9.Header1' AS header WITH ;
		Caption = "Project", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column9.Label' AS label WITH ;
		Caption = "", ;
		Name = "Label"
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Grid1.Column9.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 9, ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Margin = 0, ;
		MousePointer = 15, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE createupdatescursor
		Local laLines[1], lcPrompt, llAnyFound, lnI, lnLineCount, loUpdateList, loVersionInfo
		
		loUpdateList		 = Execscript(_Screen.cThorDispatcher, 'Thor_Proc_GetUpdateList', 0)
		
		Create Cursor crsr_ThorUpdates(				;
			  Recno					N(4),			;
			  AppName  				C(20),			;
			  InstalledVersion		C(100),			;
			  InstalledVerNumber	C(100),			;
			  InstalledVerDate		C(20),			;
			  AvailableVersion		C(100),			;
			  AvailableVerNumber	C(100),			;
			  AvailableVerDate		C(20),			;
			  Status                C(40),			;
			  UpdateNow           	L,				;
			  NeverUpdate			L,				;
			  NeverUpdateFile		C(250),			;
			  FromMyUpdates			L,				;
			  Notes					M,				;
			  Link                	M,				;
			  LinkPrompt			C(100),			;
			  Disabled        		L,				;
			  SortKey			    C(100),			;
			  VerDate               D,				;
			  ProjectType			C(10)			;
			  )
		
		llAnyFound = .F.
		For lnI = 1 To loUpdateList.Count
			With loUpdateList[lnI]
		
				If Not Empty(.Link)
					lcPrompt = Strtran(Transform(.LinkPrompt), 'Home Page', '')
					Insert Into crsr_ThorUpdates														;
						(Recno, AppName, InstalledVersion,	AvailableVersion, Notes, FromMyUpdates, Link, LinkPrompt, ProjectType) ;
						Values																			;
						(lnI, .ApplicationName, .CurrentVersion, .AvailableVersion, .Tag, .FromMyUpdates = 'Y';
							, Transform(.Link), lcPrompt, Iif('Y' $ Upper(.Component), 'Component', 'App'))
		
					Do Case
						Case 'THOR' == Upper(Alltrim(.ApplicationName))
							Replace	Status With  'Installed', SortKey	 With 'A'
							
						Case Not Empty(.CurrentVersion)
							Replace	Status With  'Installed', SortKey	 With 'B'
							
						Case Empty(.CurrentVersion)
							Replace SortKey With 'X'
		
					Endcase
				Endif && not Empty(.Link)
		
				*!* * Removed 10/5/2012 / JRN
				*!* loVersionInfo = GetVersionInfo (.CurrentVersion)
				*!* Replace	InstalledVerNumber	With  Alltrim (loVersionInfo.VerNumber) + Iif (loVersionInfo.VerDate <= EmptyVerDate, '', ' (' + Dtoc (loVersionInfo.VerDate) + ')')
				*!* *!* Replace	InstalledVerNumber	With  loVersionInfo.VerNumber		;
				*!* *!* 		InstalledVerDate	With  loVersionInfo.VerDate
		
				*!* *!* * Removed 10/3/2012 / JRN
				*!* *!* If (Not .CurrentVersion == .AvailableVersion) And Not Empty (.AvailableVersion)
				*!* If Not Empty (.AvailableVersion)
				*!* 	loVersionInfo = GetVersionInfo (.AvailableVersion)
				*!* 	Replace	AvailableVerNumber	With  Alltrim (loVersionInfo.VerNumber) + ' (' + Dtoc (loVersionInfo.VerDate) + ')'
				*!* 	*!* Replace	AvailableVerNumber	With  loVersionInfo.VerNumber		;
				*!* 	*!* 		AvailableVerDate	With  loVersionInfo.VerDate
				*!* Endif
		
				*!* Replace	NeverUpdate		 With  .NeverUpdate = 'Y'									;
				*!* 		UpdateNow		 With  (Not NeverUpdate)									;
				*!* 		  And (.AvailableVersion > EVL(.CurrentVersion, ' ')  )						;
				*!* 		  And (.UpdateNowIfNotInstalled = 'Yes' Or Not Empty (.CurrentVersion))		;
				*!* 		Disabled		 With  .CurrentVersion == .AvailableVersion					;
				*!* 		NeverUpdateFile	 With  .NeverUpdateFile										;
				*!* 		Notes			 With  Transform(.Notes)									;
				*!* 		Link			 With  Transform(.Link)										;
				*!* 		LinkPrompt		 With  Transform(Evl (.LinkPrompt, .Link))					;
				*!* 		VerDate          with  loVersionInfo.VerDate
		
				*!* Replace	SortKey	 With														;
				*!* 		  Icase(UpdateNow, 'A',												;
				*!* 			NeverUpdate, 'Z',												;
				*!* 			Empty(InstalledVerNumber) And VerDate > Date() - 100, 'C',		;
				*!* 			Disabled, 'B',													;
				*!* 			'X') +															;
				*!* 		  Upper(AppName)
		
				*!* Replace	Status	 With								;
				*!* 		  Icase(UpdateNow, 'Update available',		;
				*!* 			Disabled, 'Current',					;
				*!* 			'Not Installed')
		
				*!* llAnyFound = llAnyFound Or UpdateNow
		
			Endwith
		Endfor && lnI = 1 to loUpdateList.Count
		
		Select  *										;
			From crsr_ThorUpdates						;
			where not Empty(LinkPrompt)					;
			Order By SortKey;
			Into Cursor crsr_ThorUpdates Readwrite		
		Goto Top
		
		Return llAnyFound
		
	ENDPROC

	PROCEDURE Destroy
		Local lnI
		
		If Not Isnull(This.oSettings)
			This.cColumnWidths	= ''
			This.cColumnOrder	= ''
		
			With This.grid1
				For lnI = 1 To .ColumnCount
					With .Columns[lnI]
						This.cColumnWidths	= This.cColumnWidths + Transform (.Width) + ','
						This.cColumnOrder	= This.cColumnOrder + Transform (.ColumnOrder ) + ','
					Endwith
				Endfor
			Endwith && this.grid1
		
			This.oSettings.Save (This)
		Endif
		
		This.oSettings = .Null.
		
	ENDPROC

	PROCEDURE Init
		* ThorFormSettings home page = http://vfpx.codeplex.com/wikipage?title=Thor%20Framework%20FormSettings
		Local laColumnOrder[1], laColumnWidths[1], lnI, loSettings
		
		loSettings = Execscript (_Screen.cThorDispatcher, 'Class= ThorFormSettings', 'ProjectHomePages')
		Thisform.AddProperty ('oSettings', loSettings)
		Thisform.CreateUpdatesCursor()
		Thisform.Bindcontrols = .t.
		
		If Not Isnull(loSettings)
			loSettings.Restore (Thisform) && Gets top, left, height, width
		
			loSettings.Restore (Thisform, 'cColumnWidths, cColumnOrder, nSplitterTop') && and two other propertie
		
			*!* * Removed 10/3/2012 / JRN
			*!* If Not Empty (This.cColumnWidths)
			*!* 	Alines (laColumnWidths, This.cColumnWidths, 5, ',')
			*!* 	Alines (laColumnOrder, This.cColumnOrder, 5, ',')
			*!* 	With This.grid1
			*!* 		For lnI = 1 To Min (.ColumnCount, Alen (laColumnWidths, 1))
			*!* 			With .Columns[lnI]
			*!* 				.Width		 = Val (laColumnWidths[lnI])
			*!* 				.ColumnOrder = Val (laColumnOrder[lnI])
			*!* 			Endwith
			*!* 		Endfor
			*!* 	Endwith && this.grid1
			*!* Endif && not Empty(This.cColumnWidths)
			
		Endif
		
		
		
	ENDPROC

	PROCEDURE sortcolumn
		Lparameters lcField
		
		Local lcIndexFile
		
		Delete Tag all 
		
		lcIndexFile = Sys(2023) + '\_SB_Temp' + Sys(2015)
		Index On &lcField Tag Tag
		Goto top
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE Grid1.Column1.Text1.When
		Return .f.
	ENDPROC

	PROCEDURE Grid1.Column2.Text1.When
		Return .f.
	ENDPROC

	PROCEDURE Grid1.Column4.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.SortKey')
	ENDPROC

	PROCEDURE Grid1.Column6.checkbox.Valid
		This.Parent.Parent.Refresh()
		
	ENDPROC

	PROCEDURE Grid1.Column7.checkbox.Valid
		Local lcFileName
		This.Parent.Parent.Refresh()
		lcFileName = Trim (NeverUpdateFile)
		Do Case
			Case This.Value And Not File (lcFileName)
				Strtofile ('No more updating', lcFileName)
			Case File (lcFileName) And Not (This.Value)
				Erase (lcFileName)
		Endcase
		
	ENDPROC

	PROCEDURE Grid1.Column9.Header1.Click
		Thisform.SortColumn('crsr_ThorUpdates.AppName')
	ENDPROC

	PROCEDURE Grid1.Column9.Text1.Click
		Local lcLink, loLink
		lcLink = Alltrim (Link)
		If Not Empty (lcLink)
			loLink = Newobject ('_ShellExecute', Home() + 'FFC\_Environ.vcx')
			loLink.ShellExecute (lcLink)
		Endif
		
	ENDPROC

	PROCEDURE Grid1.Init
		This.SetAll('DynamicFontBold', 'crsr_ThorUpdates.UpdateNow', 'Column')
		This.SetAll('DynamicFontItalic', 'crsr_ThorUpdates.FromMyUpdates', 'Column')
		This.SetAll('DynamicBackColor', 'ICase(crsr_ThorUpdates.UpdateNow, Rgb(255,255,0), crsr_ThorUpdates.NeverUpdate, Rgb(192,192,192), Empty(InstalledVerNumber) and VerDate > Date() - 100, Rgb(196, 240, 208), Rgb(255,255,255))', 'Column')
		
	ENDPROC

ENDDEFINE

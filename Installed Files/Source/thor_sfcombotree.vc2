*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_sfcombotree.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sfcombotree AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cboCombo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTree" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpTreeView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oImageList" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: closecontrol		&& Closes the control
		*m: enabled_assign
		*m: fontname_assign
		*m: fontsize_assign
		*m: itemselected		&& Called when an item is selected and the control closed
		*m: loadexpandednode		&& Loads the specified node as it's expanded
		*m: loadimages		&& Loads images used by the ImageList
		*m: loadtree		&& Loads the TreeView
		*m: opencontrol		&& Opens the control
		*m: value_access
		*m: value_assign
		*p: fontname		&& The font name for the control
		*p: fontsize		&& The font size for the control
		*p: lchanged		&& .T. if the user selected a different value
		*p: lcloseonclick		&& .T. to close the control when an item in the TreeView is clicked
		*p: lcloseondblclick		&& .T. to close the control when an item in the TreeView is double-clicked
		*p: lcombotreeopen		&& .T. if the TreeView is displayed
		*p: lloadimagesoninit		&& .T. to load images from Init
		*p: lloadtreeoninit		&& .T. to load the TreeView from Init
		*p: lmovetoback		&& .T. to set the ZOrder of the control to the back when it's closed
		*p: lnoclose		&& .T. to not have LostFocus close the control
		*p: nfired		&& When cboCombo.DropDown last fired so we can handle multiple firing
		*p: ninitialformheight
		*p: noriginalheight		&& The original height of the control
		*p: nsavedanchor		&& The original Anchor value
		*p: nspaceabovetreeview
		*p: value		&& The value of the control
		*a: aparentheights[1,0]		&& An array containing heights of parent containers before opening the control
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	PROTECTED aparentheights,ninitialformheight,nsavedanchor
	*<PropValue>
		Anchor = 10
		BackColor = 255,255,255
		BackStyle = 1
		BorderWidth = 0
		fontname = Tahoma
		fontsize = 9
		Height = 24
		lchanged = .F.
		lcloseonclick = .F.
		lcloseondblclick = .F.
		lcombotreeopen = .F.
		lloadimagesoninit = .F.
		lloadtreeoninit = .F.
		lmovetoback = .T.
		lnoclose = .F.
		Name = "sfcombotree"
		nfired = 0
		ninitialformheight = 0
		noriginalheight = 227
		nsavedanchor = 0
		nspaceabovetreeview = 0
		Style = 0
		value = 
		Width = 170
		_memberdata = <VFPData>
			<memberdata name="enabled" type="property" display="Enabled"/>
			<memberdata name="enabled_assign" type="property" display="Enabled_Assign"/>
			<memberdata name="nsavedanchor" type="property" display="nSavedAnchor"/>
			<memberdata name="closecontrol" type="method" display="CloseControl"/>
			<memberdata name="lchanged" type="property" display="lChanged"/>
			<memberdata name="lcloseonclick" type="property" display="lCloseOnClick"/>
			<memberdata name="lcloseondblclick" type="property" display="lCloseOnDblClick"/>
			<memberdata name="lcombotreeopen" type="property" display="lComboTreeOpen"/>
			<memberdata name="lmovetoback" type="property" display="lMoveToBack"/>
			<memberdata name="lnoclose" type="property" display="lNoClose"/>
			<memberdata name="loadexpandednode" type="method" display="LoadExpandedNode"/>
			<memberdata name="loadtree" type="method" display="LoadTree"/>
			<memberdata name="nfired" type="property" display="nFired"/>
			<memberdata name="ninitialformheight" type="property" display="nInitialFormHeight"/>
			<memberdata name="noriginalheight" type="property" display="nOriginalHeight"/>
			<memberdata name="opencontrol" type="method" display="OpenControl"/>
			<memberdata name="value" type="property" display="Value"/>
			<memberdata name="value_access" type="property" display="Value_Access"/>
			<memberdata name="value_assign" type="property" display="Value_Assign"/>
			<memberdata name="fontname" type="property" display="FontName"/>
			<memberdata name="fontname_assign" type="property" display="FontName_Assign"/>
			<memberdata name="fontsize" type="property" display="FontSize"/>
			<memberdata name="fontsize_assign" type="property" display="FontSize_Assign"/>
			<memberdata name="itemselected" type="method" display="ItemSelected"/>
			<memberdata name="loadimages" type="method" display="LoadImages"/>
			<memberdata name="lloadimagesoninit" type="property" display="lLoadImagesOnInit"/>
			<memberdata name="lloadtreeoninit" type="property" display="lLoadTreeOnInit"/>
			<memberdata name="aparentheights" display="aParentHeights"/>
			<memberdata name="nspaceabovetreeview" type="property" display="nSpaceAboveTreeView"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cboCombo' AS combobox WITH ;
		FontName = "Tahoma", ;
		Height = 24, ;
		ItemTips = .T., ;
		Name = "cboCombo", ;
		RowSourceType = 1, ;
		SelectOnEntry = .T., ;
		Style = 2, ;
		Top = 0, ;
		Width = 168
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'oImageList' AS olecontrol WITH ;
		Height = 100, ;
		Left = 120, ;
		Name = "oImageList", ;
		Top = 40, ;
		Width = 100
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\system32\mscomctl.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgAAAAEAAAD+////AAAAAAAAAAD////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9/////v////7////+/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////1IAbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDmBcu4hcwBAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAIAAAD+/////vjfyQskYXREbFqAMDwKDYoIUM0EggAAADtAwAA7QMAAIB+4eYAAAYAIAAAAAAAAADAwMAA//9EAAHvzasAAAUAXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5MzY4MjY1RS04NUZFLTExZDEtOEJFMy0wMDAwRjg3NTREQTF+AEMAXgAsAEsARgB2ADgAWgAhAFAAQwBlAHEARwA3ADMAOAABAACAKwAxACYAOAA2AFsAYwA5ADcANAB0AEYAbgAxAGsATwB1AEIAUQB+AGUAMAArAGkAeQAnAEcAQQBfAF4AWMEbAAYAAAD/////BQAAgAAAAAAAAAAAAAAAAG8AfQBvAEAAeQA/ACkAKABxAHMAdwBNACkALgB1AF0AdgBSAFsAXgBEAEoAKAA9AC0AKQB+ACgAWwBJAG4AcwBfAHIAUwBWACEASwA5AEcAaQA1ACsAPwBSADcAcQApAHUAOQAnADAAWgBeAAIAUAByAG8AZAB1AGMAdABGAGkAbABlAHMAAAAAAAAAbgAAbgRtAAAg9MIAiO/CAHcAYQByAGUAXABNAGkAYwByAG8AcwBvAGYAdABcAFcAaQBuAGQAbwB3AHMAXABDAHUAcgByAGUAbgB0AFYAZQByAHMAaQBvAA==" />

	ADD OBJECT 'oTree' AS basetree WITH ;
		Height = 174, ;
		Left = 5, ;
		Name = "oTree", ;
		Top = 29, ;
		Width = 166
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="olecontrol" OLEObject="c:\windows\system32\mscomctl.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgAAAAEAAAD+////AAAAAAAAAAD////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9/////v////7///8EAAAA/vbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDmBcu4hcwBAwAAAIACAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiwAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAACcBAAAAAAAACAAAAAIAAAD+////BAAAAAUAAAAGAAAABwAAAP7///8JAAAA/vkEHHiYXREbFqAMDwKDYoIUM0EggAAAAoEQAA/BEAALE8wWoBAAYAIgAAAD0AAAAJAQAADAAAAAmjHwYB782rXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5MzY4MjY1RS04NUZFLTExZDEtOEJFMy0wMDAwRjg3NTREQTEAAAAAKNsAAAAAAADg2wAAAAAAAIjcAAAAAAAAkNIAAAAAAAABAACADgAAAEhpZGVTZWxlY3Rpb24ABQAAAEwAAAAADAAAAEluZGVudGF0aW9uABEAAABODQAAAAcAAAAAAAAAAAAkQAoAAABMYWJlbEVkaXQACQAAAEkKAAAAAQAAAAoAAABMaW5lU3R5bGUACQAAAEkKAAAAAQAAAA0AAABNb3VzZVBvaW50ZXIACQAAAEkKAAAAAAAAAA4AAABQYXRoU2VwYXJhdG9yAAoAAABIAAAAAAEAAABcDAAAAE9MRURyYWdNb2RlAAkAAABJCgAAAAAAAAAMAAAAT0xFRHJvcE1vZGUACQAAAEkKAAAAAAAAAAsAAABBcHBlYXJhbmNlAAkAAABJCgAAAAAAAAAMAAAASG90VHJhY2tpbmcABQAAAEwBAAAAAF4PAQAAAAAAnA4BAAAAAADkEAEAAAAAAAAABQAAAAAAAgBjAAAAAAAFAACAnOkSAAEAAABcAB/e7L0BAAUA4ekSAANS4wuRj84RneMAqgBLuFEBAAAAkAGQXwEABlRhaG9tYQBfAEEAYwBjAGUAcwBzACIALwA+ADwAbQBlAG0AYgBlAHIAZABhAHQAYQAgAG4AYQBtAGUAPQAiAHYAYQBsAHUAZQBfAGEAcwBzAGkAZwBuACIAIAB0AHkAcABlAD0AIgBwAHIAbwBwAGUAcgB0AHkAIgAgAGQAaQBzAHAAbABhAHkAPQAiAFYAYQBsAHUAZQBfAEEAcwBzAGkAZwBuACIALwA+ADwAbQBlAG0AYgBlAHIAZABhAHQAYQAgAG4AYQBtAGUAPQAiAGYAbwBuAHQAbgBhAG0AZQAiACAAdAB5AHAAZQA9ACIAcAByAG8AcABlAHIAdAB5ACIAIABkAGkAcwBwAGwAYQB5AD0AIgBGAG8AbgB0AE4AYQBtAGUAIgAvAD4APABtAGUAbQBiAGUAcgBkAGEAdABhACAAbgBhAG0AZQA9ACIAZgBvAG4AdABuAGEAbQBlAF8AYQBzAHMAaQBnAG4AIgAgAHQAeQBwAGUAPQAiAHAAcgBvAHAAZQByAHQAeQAiACAAZABpAHMAcABsAGEAeQA9ACIARgBvAG4AdABOAGEAbQBlAF8AQQBzAHMA" />

	ADD OBJECT 'shpTreeView' AS shape WITH ;
		BackColor = 255,255,255, ;
		BackStyle = 1, ;
		Height = 176, ;
		Left = 0, ;
		Name = "shpTreeView", ;
		SpecialEffect = 1, ;
		Top = 25, ;
		Width = 168
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE closecontrol		&& Closes the control
		lparameters tlKeepFocus, ;
			tlSelected
		local loParent, ;
			lnParent, ;
			lnParents, ;
			lnAnchor
		with This
		
		* Turn off anchoring since we're changing our Height.
		
			store 0 to .Anchor, .cboCombo.Anchor, .oTree.Anchor, .shpTreeView.Anchor
		
		* Adjust the properties of the control.
		
			.Height              = .cboCombo.Height
			.oTree.Visible       = .F.
			.shpTreeView.Visible = .F.
			.lComboTreeOpen      = .F.
		
		* Restore the height and anchor of any parent containers we adjusted in
		* OpenControl or resized while we were open and the form was resized. Note that
		* if the parent doesn't support vertical resizing, we'll restore Height to its
		* original value. Otherwise, we'll account for any difference in the form
		* height made while we were open.
		
			loParent  = .Parent
			lnParent  = 1
			lnParents = alen(.aParentHeights, 1)
			do while vartype(loParent) = 'O' and ;
				lower(loParent.BaseClass) = 'container' and lnParents > lnParent
				lnParent = lnParent + 1
				if vartype(.aParentHeights[lnParent, 1]) = 'N'
					loParent.Anchor = 0
					lnAnchor        = .aParentHeights[lnParent, 3]
					if not bittest(lnAnchor, 0) and not bittest(lnAnchor, 2)
						loParent.Height = .aParentHeights[lnParent, 1]
					else
						loParent.Height = .aParentHeights[lnParent, 1] + ;
							loParent.Height - .aParentHeights[lnParent, 2]
					endif not bittest(lnAnchor, 0) ...
					loParent.Anchor = lnAnchor
				endif vartype(.aParentHeights[lnParent, 1]) = 'N'
				loParent = loParent.Parent
			enddo while vartype(loParent) = 'O' ...
		
		* Restore anchoring and ensure we're at the back of ZOrder.
			.cboCombo.Left = .cboCombo.Left
			.cboCombo.Width = .cboCombo.Width
		
			store .nSavedAnchor to .Anchor, .cboCombo.Anchor
			if .lMoveToBack
				.shpTreeView.ZOrder(1)
				.oTree.ZOrder(1)
				.ZOrder(1)
			endif .lMoveToBack
		
		* Set focus to the combobox if we're supposed to.
		
			if tlKeepFocus
				.cboCombo.SetFocus()
			endif tlKeepFocus
		
		* Ensure the combobox matches the selected item.
		
			if tlSelected and vartype(.oTree.SelectedItem) = 'O'
				if not .oTree.SelectedItem.Text == .cboCombo.Value
					.lChanged = .T.
				endif not .oTree.SelectedItem.Text == .cboCombo.Value
				.Value = .oTree.SelectedItem.Text
		
		* Call ItemSelected to do any custom behavior.
		
				.ItemSelected()
			endif tlSelected ...
		endwith
		
	ENDPROC

	PROCEDURE enabled_assign
		lparameters tlEnabled
		This.Enabled = tlEnabled
		This.SetAll('Enabled', tlEnabled)
		
	ENDPROC

	PROCEDURE fontname_assign
		lparameters tuNewValue
		with This
			store tuNewValue to .FontName, .cboCombo.FontName, .oTree.Font.Name
		endwith
		
	ENDPROC

	PROCEDURE fontsize_assign
		lparameters tuNewValue
		with This
			store tuNewValue to .FontSize, .cboCombo.FontSize, .oTree.Font.Size
		endwith
		
	ENDPROC

	PROCEDURE Init
		with This
		
		* Set up the combobox.
		
			.cboCombo.Anchor      = 0
			.cboCombo.Width       = .Width - .cboCombo.Left
			.cboCombo.Anchor      = .Anchor	
			.cboCombo.ToolTipText = .ToolTipText
		
		* Save the current height of the control and the form and our Anchor value.
		
			dimension .aParentHeights[1, 2]
			.aParentHeights[1, 1] = .Height
			.aParentHeights[1, 2] = .Height
			.nInitialFormHeight   = Thisform.Height
			.nSavedAnchor         = .Anchor
		
		* Set our font name and size to their own values so Assign takes care of
		* setting the other controls.
		
			.FontName = .FontName
			.FontSize = .FontSize
		
		* Call CloseControl so everything is sized properly for a closed appearance.
		
			.CloseControl()
		
		* If we're supposed to, load the images now.
		
			if .lLoadImagesOnInit
				.LoadImages()
			endif .lLoadImagesOnInit
		
		* If we have any images, use the ImageList control with the TreeView.
		
			if .oImageList.ListImages.Count > 0
				.oTree.Object.ImageList = .oImageList
			endif .oImageList.ListImages.Count > 0
		
		* If we're supposed to, load the TreeView now.
		
			if .lLoadTreeOnInit
				.LoadTree()
			endif .lLoadTreeOnInit
		endwith
		
	ENDPROC

	PROCEDURE itemselected		&& Called when an item is selected and the control closed
		* Abstract method.
		
	ENDPROC

	PROCEDURE loadexpandednode		&& Loads the specified node as it's expanded
		* Abstract method
		
		lparameters toNode
		
	ENDPROC

	PROCEDURE loadimages		&& Loads images used by the ImageList
	ENDPROC

	PROCEDURE loadtree		&& Loads the TreeView
		* Abstract method
		
	ENDPROC

	PROCEDURE LostFocus
		* Close the control when we lose focus, although we'll do nothing if we were
		* called from CloseControl (since that may be a recursive call) or if lNoClose
		* is .T., since that means we temporarily lost focus because of kludge code in
		* cboCombo.DropDown.
		
		local laStack[1], ;
			lnI, ;
			llClose
		if not This.lNoClose
			lnStack = astackinfo(laStack)
			for lnI = lnStack to 1 step -1
				if 'closecontrol' $ laStack[lnI, 3]
					llClose = .T.
					exit
				endif 'closecontrol' $ laStack[lnI, 3]
			next lnI
			if This.lComboTreeOpen and not llClose
				This.CloseControl(.F., .T.)
			endif This.lComboTreeOpen ...
		endif not This.lNoClose
		
	ENDPROC

	PROCEDURE opencontrol		&& Opens the control
		local lnAnchor, ;
			loParent, ;
			lnParent, ;
			lnI, ;
			loNode
		with This
		
		* If we haven't already done so, load the TreeView the first time we're opened.
		
			if .oTree.Nodes.Count = 0
				.LoadTree()
			endif .oTree.Nodes.Count = 0
		
		* If we loaded images later than from Init, use the ImageList control with the
		* TreeView.
		
			if not .lLoadImagesOnInit and .oImageList.ListImages.Count > 0
				.oTree.Object.ImageList = .oImageList
			endif not .lLoadImagesOnInit ...
		
		* Turn off anchoring since we'll be resizing and moving controls.
		
			lnAnchor = .Anchor
			store 0 to .Anchor, .cboCombo.Anchor, .oTree.Anchor, .shpTreeView.Anchor
		
		* Save our height, then set it to the desired height, accounting for any resize
		* of the form.
		
			.aParentHeights[1, 1] = .Height
			.Height               = min(.nOriginalHeight + Thisform.Height - ;
				.nInitialFormHeight, Thisform.Height - This.Top - 5)
			.aParentHeights[1, 2] = .Height
		
		* Save the height of all parent containers and adjust them if necessary. Also,
		* save the current anchor values and add 5 if necessary so they resize
		* vertically.
		
			loParent = This.Parent
			lnParent = 1
			do while vartype(loParent) = 'O' and ;
				lower(loParent.BaseClass) = 'container'
				lnParent = lnParent + 1
				dimension .aParentHeights[lnParent, 3]
				if loParent.Height < .Top + .Height
					.aParentHeights[lnParent, 3] = loParent.Anchor
					loParent.Anchor              = 0
					.aParentHeights[lnParent, 1] = loParent.Height
					loParent.Height              = .Top + .Height
					.aParentHeights[lnParent, 2] = loParent.Height
					loParent.Anchor              = .aParentHeights[lnParent, 3]
					if not bittest(loParent.Anchor, 0) and ;
						not bittest(loParent.Anchor, 2)
						loParent.Anchor = loParent.Anchor + 5
					endif not bittest(loParent.Anchor, 0) ...
				endif loParent.Height < .Top + .Height
				loParent = loParent.Parent
			enddo while vartype(loParent) = 'O' ...
		
		* Adjust the size of the TreeView and shape in case the container was resized
		* while we were closed.
		
		*!*		.oTree.Width        = .Width - 2
		*!*		.oTree.Height       = .Height - .cboCombo.Height - 4
		*!*		.oTree.Left         = .shpTreeView.Left + 1
		*!*		.oTree.Top          = .shpTreeView.Top + 1
		*!*		.shpTreeView.Width  = .Width
		*!*		.shpTreeView.Height = .Height - .cboCombo.Height - 2
		
			.shpTreeView.Width  = .Width
			.shpTreeView.Top    = .cboCombo.Height + 1 + .nSpaceAboveTreeView 
			.shpTreeView.Height = .Height - .shpTreeView.Top - 1
			.oTree.Width        = .shpTreeView.Width - 2
			.oTree.Height       = .shpTreeView.Height - 2 
			.oTree.Left         = .shpTreeView.Left + 1
			.oTree.Top          = .shpTreeView.Top + 1 && + .nSpaceAboveTreeView 
		
		* If the current value doesn't match the selected item in the TreeView, find
		* and select the appropriate item.
		
			if vartype(.oTree.SelectedItem) <> 'O' or ;
				(not empty(.cboCombo.DisplayValue) and ;
				not .cboCombo.DisplayValue == .oTree.SelectedItem.Text)
				for lnI = 1 to .oTree.Nodes.Count
					loNode = .oTree.Nodes.Item(lnI)
					if .cboCombo.DisplayValue == loNode.Text
						loNode.Selected = .T.
						exit
					endif .cboCombo.DisplayValue == loNode.Text
				next lnI
			endif vartype(.oTree.SelectedItem) <> 'O' ...
		
		* Enable the controls appropriately, then set focus to the TreeView.
		
			.oTree.Visible       = .T.
			.shpTreeView.Visible = .T.
			.ZOrder(0)
			.shpTreeView.ZOrder(0)
			.oTree.ZOrder(0)
			.lComboTreeOpen = .T.
			.oTree.SetFocus()
		
		* Restore anchoring and add 5 to it so we resize vertically.
		
			.cboCombo.Anchor = lnAnchor
			store lnAnchor + 5 to .Anchor, .oTree.Anchor, .shpTreeView.Anchor
		endwith
		
	ENDPROC

	PROCEDURE value_access
		return This.cboCombo.DisplayValue
		
	ENDPROC

	PROCEDURE value_assign
		lparameters tuNewValue
		store tuNewValue to This.cboCombo.Value, This.cboCombo.DisplayValue
		
	ENDPROC

	PROCEDURE cboCombo.DropDown
		local lnCol, ;
			lnRow
		
		* Prevent the usual behavior.
		
		nodefault
		with This.Parent
			do case
		
		* If the control isn't open, open it.
		
				case not .lComboTreeOpen
					.OpenControl()
		
		* If the control is open and we weren't just fired, close the control.
		* Otherwise, click to the right of the control then move the mouse back. This
		* avoids a weird behavior: if you open and close the control, then open it
		* again using the mouse, DropDown fires continously as long as the mouse is
		* over the control. So, we move the move off the control, click, and move it
		* back to the original spot to stop this.
		
				case seconds() > .nFired + 0.25
					.CloseControl(.T., .T.)
				otherwise
					.lNoClose = .T.
					lnCol     = mcol(Thisform.Name, 3)
					lnRow     = mrow(Thisform.Name, 3)
					mouse click at lnRow, objtoclient(This.Parent, 2) + .Width + 5 pixels ;
						window (Thisform.Name)
					doevents force
					mouse at lnRow, lnCol pixels window (Thisform.Name)
					doevents force
					.lNoClose = .F.
					.oTree.SetFocus()
			endcase
			.nFired = seconds()
		endwith
		
	ENDPROC

	PROCEDURE cboCombo.KeyPress
		* Prevent Ctrl-0 from inserting a null value.
		
		lparameters tnKeyCode, ;
			tnShiftAltCtrl
		if tnKeyCode = asc('0') and bittest(tnShiftAltCtrl, 1)
			nodefault
		endif tnKeyCode = asc('0') ...
		
	ENDPROC

	PROCEDURE oTree.DblClick
		* Close the control if we're supposed to.
		
		if This.Parent.lCloseOnDblClick
			This.Parent.CloseControl(.F., .T.)
		endif This.Parent.lCloseOnDblClick
		
	ENDPROC

	PROCEDURE oTree.Expand
		lparameters toNode
		if toNode.Children > 0 and toNode.Child.Text = 'Loading...'
			This.Parent.LoadExpandedNode(toNode)
		endif toNode.Children > 0 ...
		
	ENDPROC

	PROCEDURE oTree.KeyDown
		lparameters tnKeyCode, ;
			tnShift
		do case
			case tnKeyCode = 27
				This.Parent.CloseControl(.F., .T.)
		endcase
		
	ENDPROC

	PROCEDURE oTree.NodeClick
		* Close the control if we're supposed to.
		
		lparameters toNode
		if This.Parent.lCloseOnClick
			This.Parent.CloseControl(.F., .T.)
		endif This.Parent.lCloseOnClick
		
	ENDPROC

ENDDEFINE

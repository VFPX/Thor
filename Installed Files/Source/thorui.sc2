*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thorui.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "thor_ui.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS frmthor AS baseform OF "basecontrols.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pgfThor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfThor.basepage1.oMenu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfThor.Basepage2.Toolkeys1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfThor.Basepage3.Thoroptions1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfThor.Basepage4.Hotkeylist1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfThor.Basepage5.Startuptools1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRunThor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRefresh" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFolder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oImageList" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addpemeditortools
		*m: edittool		&& Edits the specified tool
		*m: gethotkeydescription
		*m: help
		*m: loadtree		&& Loads the TreeView
		*m: notthorinternalmenu
		*m: openoptionspage
		*m: refreshtools		&& Refreshes the tools
		*m: runthor		&& Runs Thor to update the hotkeys and menus
		*m: setfontsize
		*p: cthorfolder
		*p: lrefreshselecttooltreeview
		*p: lrefreshtools		&& Flags that we're refreshing tools
		*p: nfontsize
		*p: noptionssplitterleft
		*p: oselecttool
		*p: othor		&& A reference to a Thor_Engine object
		*p: otools		&& A reference to a collection of tools
	*</DefinedPropArrayMethod>

	*<PropValue>
		BindControls = .F.
		Caption = "Thor"
		cfoxuserid = Thor
		cfoxusername = ThorEditor
		cthorfolder = 
		DataSession = 2
		DoCreate = .T.
		Height = 334
		Icon = thor16.ico
		lrefreshselecttooltreeview = .F.
		lrefreshtools = .F.
		Name = "frmThor"
		nfontsize = 9
		noptionssplitterleft = 0
		oselecttool = .NULL.
		othor = .NULL.
		otools = .NULL.
		Visible = .T.
		Width = 660
		_memberdata = <VFPData>
			<memberdata name="otools" display="oTools"/>
			<memberdata name="opentables" display="OpenTables"/>
			<memberdata name="ctablesfolder" display="cTablesFolder"/>
			<memberdata name="othor" display="oThor"/>
			<memberdata name="refreshtools" display="RefreshTools"/>
			<memberdata name="lrefreshtools" display="lRefreshTools"/>
			<memberdata name="cthorfolder" display="cThorFolder"/>
			<memberdata name="runthor" display="RunThor"/>
			<memberdata name="edittool" display="EditTool"/>
			<memberdata name="setfontsize" display="SetFontSize"/>
			<memberdata name="lrefreshselecttooltreeview" display="lRefreshSelectToolTreeView"/>
			<memberdata name="help" display="Help"/>
			<memberdata name="oselecttool" display="oSelectTool"/>
			<memberdata name="gethotkeydescription" display="GetHotKeyDescription"/>
			<memberdata name="addpemeditortools" display="AddPEMEditorTools"/>
			<memberdata name="loadtree" display="LoadTree"/>
			<memberdata name="nfontsize" display="nFontSize"/>
			<memberdata name="notthorinternalmenu" display="NotThorInternalMenu"/>
			<memberdata name="noptionssplitterleft" display="nOptionsSplitterLeft"/>
			<memberdata name="openoptionspage" display="OpenOptionsPage"/>
		</VFPData>
		cmdEscape.Name = "cmdEscape"
	*</PropValue>

	ADD OBJECT 'cmdHelp' AS basecommandbutton WITH ;
		Anchor = 8, ;
		Caption = "", ;
		Left = 630, ;
		Name = "cmdHelp", ;
		Picture = refhelp.bmp, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRefresh' AS basecommandbutton WITH ;
		Anchor = 8, ;
		Caption = "", ;
		Left = 580, ;
		Name = "cmdRefresh", ;
		Picture = refresh2.bmp, ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRunThor' AS basecommandbutton WITH ;
		Anchor = 8, ;
		Caption = "", ;
		Left = 605, ;
		Name = "cmdRunThor", ;
		Picture = thor16.png, ;
		TabIndex = 3, ;
		Top = 5, ;
		Width = 23
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblFolder' AS baselabel WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		Caption = "Folder", ;
		Left = 12, ;
		Name = "lblFolder", ;
		Top = 315
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'lblVersion' AS baselabel WITH ;
		Alignment = 1, ;
		Anchor = 12, ;
		Caption = "Version", ;
		Left = 615, ;
		Name = "lblVersion", ;
		Top = 315
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="label" />

	ADD OBJECT 'oImageList' AS olecontrol WITH ;
		Height = 26, ;
		Left = 480, ;
		Name = "oImageList", ;
		Top = 6, ;
		Width = 36
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\syswow64\mscomctl.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAB9XsoZ84BAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAIAAAD+/////vjfyQskYXREbFqAMDwKDYoIUM0EggAAADtAwAA7QMAAIB+4eYAAAYAIAAAAAAAAADAwMAA//9MAAHvzasAAAUAXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5MzY4MjY1RS04NUZFLTExZDEtOEJFMy0wMDAwRjg3NTREQTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAUAD/////BQAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==" />

	ADD OBJECT 'pgfThor' AS basepageframe WITH ;
		Anchor = 15, ;
		ErasePage = .T., ;
		Height = 305, ;
		Left = 10, ;
		Name = "pgfThor", ;
		PageCount = 5, ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 645, ;
		_memberdata = <VFPData>
			<memberdata name="otools" display="oTools"/>
			<memberdata name="opentables" display="OpenTables"/>
			<memberdata name="ctablesfolder" display="cTablesFolder"/>
			<memberdata name="othor" display="oThor"/>
			<memberdata name="refreshtools" display="RefreshTools"/>
			<memberdata name="lrefreshtools" display="lRefreshTools"/>
			<memberdata name="cthorfolder" display="cThorFolder"/>
			<memberdata name="runthor" display="RunThor"/>
			<memberdata name="edittool" display="EditTool"/>
		</VFPData>, ;
		basepage1.Caption = "Menu Definitions", ;
		basepage1.Name = "basepage1", ;
		basepage1.PageOrder = 1, ;
		Basepage2.Caption = "Tool Definitions", ;
		Basepage2.Name = "Basepage2", ;
		Basepage2.PageOrder = 2, ;
		Basepage3.Caption = "Options", ;
		Basepage3.Name = "Basepage3", ;
		Basepage3.PageOrder = 5, ;
		Basepage4.Caption = "Hot Key Assignments", ;
		Basepage4.Name = "Basepage4", ;
		Basepage4.PageOrder = 3, ;
		Basepage5.Caption = "Startup Tools", ;
		Basepage5.Name = "Basepage5", ;
		Basepage5.PageOrder = 4
		*< END OBJECT: ClassLib="basecontrols.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfThor.basepage1.oMenu' AS menus WITH ;
		Left = 14, ;
		Name = "oMenu", ;
		Top = 11, ;
		oTree.Height = 231, ;
		oTree.Left = 0, ;
		oTree.Name = "oTree", ;
		oTree.Top = 0, ;
		oTree.Width = 186, ;
		pgfProperties.Basepage1.Basecheckbox1.Alignment = 1, ;
		pgfProperties.Basepage1.Basecheckbox1.Name = "Basecheckbox1", ;
		pgfProperties.Basepage1.cmdAddCopiedMenu.Name = "cmdAddCopiedMenu", ;
		pgfProperties.Basepage1.cmdAddPopup.Name = "cmdAddPopup", ;
		pgfProperties.Basepage1.cmdAddTopLevel.Name = "cmdAddTopLevel", ;
		pgfProperties.Basepage1.cmdCopyMenu.Name = "cmdCopyMenu", ;
		pgfProperties.Basepage1.cmdMoveDown.Name = "cmdMoveDown", ;
		pgfProperties.Basepage1.cmdMoveUp.Name = "cmdMoveUp", ;
		pgfProperties.Basepage1.cmdRemove.Name = "cmdRemove", ;
		pgfProperties.Basepage1.edtStatusBarText.Name = "edtStatusBarText", ;
		pgfProperties.Basepage1.lblOrder.Name = "lblOrder", ;
		pgfProperties.Basepage1.lblPrompt.Name = "lblPrompt", ;
		pgfProperties.Basepage1.lblStatusBarText.Name = "lblStatusBarText", ;
		pgfProperties.Basepage1.Name = "Basepage1", ;
		pgfProperties.Basepage1.oHotKeyControls.cmdClear.Name = "cmdClear", ;
		pgfProperties.Basepage1.oHotKeyControls.cmdGetHotKey.Name = "cmdGetHotKey", ;
		pgfProperties.Basepage1.oHotKeyControls.lblHotKey.Name = "lblHotKey", ;
		pgfProperties.Basepage1.oHotKeyControls.Name = "oHotKeyControls", ;
		pgfProperties.Basepage1.oHotKeyControls.txtHotKey.Name = "txtHotKey", ;
		pgfProperties.Basepage1.txtPrompt.Name = "txtPrompt", ;
		pgfProperties.Basepage2.Baseeditbox1.Name = "Baseeditbox1", ;
		pgfProperties.Basepage2.Baselabel1.Name = "Baselabel1", ;
		pgfProperties.Basepage2.cmdEditTool.Name = "cmdEditTool", ;
		pgfProperties.Basepage2.cmdMoveDown.Name = "cmdMoveDown", ;
		pgfProperties.Basepage2.cmdMoveUp.Name = "cmdMoveUp", ;
		pgfProperties.Basepage2.cmdRemove.Name = "cmdRemove", ;
		pgfProperties.Basepage2.edtStatusBarText.Name = "edtStatusBarText", ;
		pgfProperties.Basepage2.lblOrder.Name = "lblOrder", ;
		pgfProperties.Basepage2.lblStatusBarText.Name = "lblStatusBarText", ;
		pgfProperties.Basepage2.Name = "Basepage2", ;
		pgfProperties.Basepage2.oFilter.lblFilter.Name = "lblFilter", ;
		pgfProperties.Basepage2.oFilter.Name = "oFilter", ;
		pgfProperties.Basepage2.oFilter.txtFilter.Name = "txtFilter", ;
		pgfProperties.Basepage2.oHotKeyControls.cmdClear.Name = "cmdClear", ;
		pgfProperties.Basepage2.oHotKeyControls.cmdGetHotKey.Name = "cmdGetHotKey", ;
		pgfProperties.Basepage2.oHotKeyControls.lblHotKey.Name = "lblHotKey", ;
		pgfProperties.Basepage2.oHotKeyControls.Name = "oHotKeyControls", ;
		pgfProperties.Basepage2.oHotKeyControls.txtHotKey.Name = "txtHotKey", ;
		pgfProperties.Basepage2.oToolInfo.edtToolInfo.Name = "edtToolInfo", ;
		pgfProperties.Basepage2.oToolInfo.lblLink.Name = "lblLink", ;
		pgfProperties.Basepage2.oToolInfo.lblOptions.Name = "lblOptions", ;
		pgfProperties.Basepage2.oToolInfo.lblPlugIns.Name = "lblPlugIns", ;
		pgfProperties.Basepage2.oToolInfo.lblVideo.Name = "lblVideo", ;
		pgfProperties.Basepage2.oToolInfo.Name = "oToolInfo", ;
		pgfProperties.Basepage2.Selecttool1.Baselabel1.Name = "Baselabel1", ;
		pgfProperties.Basepage2.Selecttool1.cboCombo.Name = "cboCombo", ;
		pgfProperties.Basepage2.Selecttool1.cmdApply.Name = "cmdApply", ;
		pgfProperties.Basepage2.Selecttool1.cmdClear.Name = "cmdClear", ;
		pgfProperties.Basepage2.Selecttool1.lblPrompt1.Name = "lblPrompt1", ;
		pgfProperties.Basepage2.Selecttool1.Name = "Selecttool1", ;
		pgfProperties.Basepage2.Selecttool1.oImageList.Height = 100, ;
		pgfProperties.Basepage2.Selecttool1.oImageList.Left = 120, ;
		pgfProperties.Basepage2.Selecttool1.oImageList.Name = "oImageList", ;
		pgfProperties.Basepage2.Selecttool1.oImageList.Top = 40, ;
		pgfProperties.Basepage2.Selecttool1.oImageList.Width = 100, ;
		pgfProperties.Basepage2.Selecttool1.oTree.Height = 174, ;
		pgfProperties.Basepage2.Selecttool1.oTree.Left = 5, ;
		pgfProperties.Basepage2.Selecttool1.oTree.Name = "oTree", ;
		pgfProperties.Basepage2.Selecttool1.oTree.Top = 29, ;
		pgfProperties.Basepage2.Selecttool1.oTree.Width = 166, ;
		pgfProperties.Basepage2.Selecttool1.shpTreeView.Name = "shpTreeView", ;
		pgfProperties.Basepage2.Selecttool1.txtcNewFilter.Name = "txtcNewFilter", ;
		pgfProperties.ErasePage = .T., ;
		pgfProperties.Height = 232, ;
		pgfProperties.Left = 191, ;
		pgfProperties.Name = "pgfProperties", ;
		pgfProperties.Top = 3, ;
		cmdAddMenu.Name = "cmdAddMenu", ;
		cmdAddTool.Name = "cmdAddTool", ;
		cmdAddSubMenu.Name = "cmdAddSubMenu", ;
		cmdAddSubMenu.Top = 235, ;
		oImageList.Height = 26, ;
		oImageList.Left = 150, ;
		oImageList.Name = "oImageList", ;
		oImageList.Top = 0, ;
		oImageList.Width = 36, ;
		cmdAddSeparator.Name = "cmdAddSeparator", ;
		cmdAddSeparator.Top = 235
		*< END OBJECT: ClassLib="thor_ui.vcx" BaseClass="container" />

	ADD OBJECT 'pgfThor.Basepage2.Toolkeys1' AS toolkeys WITH ;
		Height = 261, ;
		Left = 6, ;
		Name = "Toolkeys1", ;
		Top = 6, ;
		CMDCREATETOOL.Name = "CMDCREATETOOL", ;
		cmdOpenToolFolder.Name = "cmdOpenToolFolder", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT1.Name = "GRIPPERDOT1", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT1.SHAPEDARK.Name = "SHAPEDARK", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT1.SHAPELIGHT.Name = "SHAPELIGHT", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT1.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT2.Name = "GRIPPERDOT2", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT2.SHAPEDARK.Name = "SHAPEDARK", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT2.SHAPELIGHT.Name = "SHAPELIGHT", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT2.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT3.Name = "GRIPPERDOT3", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT3.SHAPEDARK.Name = "SHAPEDARK", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT3.SHAPELIGHT.Name = "SHAPELIGHT", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT3.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT4.Name = "GRIPPERDOT4", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT4.SHAPEDARK.Name = "SHAPEDARK", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT4.SHAPELIGHT.Name = "SHAPELIGHT", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT4.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT5.Name = "GRIPPERDOT5", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT5.SHAPEDARK.Name = "SHAPEDARK", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT5.SHAPELIGHT.Name = "SHAPELIGHT", ;
		THOR_SFSPLITTERH1.GRIPPER.GRIPPERDOT5.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		THOR_SFSPLITTERH1.GRIPPER.Name = "GRIPPER", ;
		THOR_SFSPLITTERH1.Name = "THOR_SFSPLITTERH1", ;
		THOR_SFSPLITTERH1.Top = 0, ;
		cntToolInfo.chkFavorite.Alignment = 0, ;
		cntToolInfo.chkFavorite.Name = "chkFavorite", ;
		cntToolInfo.chkStartup.Alignment = 0, ;
		cntToolInfo.chkStartup.Name = "chkStartup", ;
		cntToolInfo.chkToolBar.Alignment = 0, ;
		cntToolInfo.chkToolBar.Name = "chkToolBar", ;
		cntToolInfo.cmdEditTool.Name = "cmdEditTool", ;
		cntToolInfo.cmdRemoveTool.Name = "cmdRemoveTool", ;
		cntToolInfo.cmdToolBarIcon.Name = "cmdToolBarIcon", ;
		cntToolInfo.Edittoolbutton1.Enabled = .F., ;
		cntToolInfo.Edittoolbutton1.Name = "Edittoolbutton1", ;
		cntToolInfo.Edittoolbutton1.Visible = .F., ;
		cntToolInfo.Name = "cntToolInfo", ;
		cntToolInfo.oHotKeyControls.cmdClear.Name = "cmdClear", ;
		cntToolInfo.oHotKeyControls.cmdGetHotKey.Name = "cmdGetHotKey", ;
		cntToolInfo.oHotKeyControls.lblHotKey.Name = "lblHotKey", ;
		cntToolInfo.oHotKeyControls.Name = "oHotKeyControls", ;
		cntToolInfo.oHotKeyControls.txtHotKey.Name = "txtHotKey", ;
		cntToolInfo.oToolInfo.edtToolInfo.Height = 160, ;
		cntToolInfo.oToolInfo.edtToolInfo.Name = "edtToolInfo", ;
		cntToolInfo.oToolInfo.Height = 178, ;
		cntToolInfo.oToolInfo.lblLink.Name = "lblLink", ;
		cntToolInfo.oToolInfo.lblLink.Top = 162, ;
		cntToolInfo.oToolInfo.lblOptions.Name = "lblOptions", ;
		cntToolInfo.oToolInfo.lblOptions.Top = 162, ;
		cntToolInfo.oToolInfo.lblPlugIns.Name = "lblPlugIns", ;
		cntToolInfo.oToolInfo.lblVideo.Name = "lblVideo", ;
		cntToolInfo.oToolInfo.lblVideo.Top = 162, ;
		cntToolInfo.oToolInfo.Name = "oToolInfo", ;
		cntToolInfo.Top = 0, ;
		SELECTTOOLFORBROWSING1.Baselabel1.Name = "Baselabel1", ;
		SELECTTOOLFORBROWSING1.Name = "SELECTTOOLFORBROWSING1", ;
		SELECTTOOLFORBROWSING1.oTree.Height = 201, ;
		SELECTTOOLFORBROWSING1.oTree.Left = 1, ;
		SELECTTOOLFORBROWSING1.oTree.Name = "oTree", ;
		SELECTTOOLFORBROWSING1.oTree.Top = 30, ;
		SELECTTOOLFORBROWSING1.oTree.Width = 265, ;
		SELECTTOOLFORBROWSING1.Top = 0, ;
		SELECTTOOLFORBROWSING1.txtcNewFilter.Name = "txtcNewFilter"
		*< END OBJECT: ClassLib="thor_ui.vcx" BaseClass="container" />

	ADD OBJECT 'pgfThor.Basepage3.Thoroptions1' AS thoroptions WITH ;
		Left = 14, ;
		Name = "Thoroptions1", ;
		Top = 11, ;
		cntNonDefault.Name = "cntNonDefault", ;
		oList.Height = 260, ;
		oList.Left = 0, ;
		oList.Name = "oList", ;
		oList.Top = 0, ;
		oList.Width = 200, ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT1.Name = "GRIPPERDOT1", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT1.SHAPEDARK.Name = "SHAPEDARK", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT1.SHAPELIGHT.Name = "SHAPELIGHT", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT1.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT2.Name = "GRIPPERDOT2", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT2.SHAPEDARK.Name = "SHAPEDARK", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT2.SHAPELIGHT.Name = "SHAPELIGHT", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT2.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT3.Name = "GRIPPERDOT3", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT3.SHAPEDARK.Name = "SHAPEDARK", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT3.SHAPELIGHT.Name = "SHAPELIGHT", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT3.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT4.Name = "GRIPPERDOT4", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT4.SHAPEDARK.Name = "SHAPEDARK", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT4.SHAPELIGHT.Name = "SHAPELIGHT", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT4.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT5.Name = "GRIPPERDOT5", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT5.SHAPEDARK.Name = "SHAPEDARK", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT5.SHAPELIGHT.Name = "SHAPELIGHT", ;
		Thor_sfsplitterh1.GRIPPER.GRIPPERDOT5.SHAPEMIDDLE.Name = "SHAPEMIDDLE", ;
		Thor_sfsplitterh1.GRIPPER.Name = "GRIPPER", ;
		Thor_sfsplitterh1.Name = "Thor_sfsplitterh1", ;
		cntDefault.CHKVALUE.Alignment = 0, ;
		cntDefault.CHKVALUE.Name = "CHKVALUE", ;
		cntDefault.EDTVALUE.Name = "EDTVALUE", ;
		cntDefault.LBLVALUE.Name = "LBLVALUE", ;
		cntDefault.Name = "cntDefault", ;
		cntDefault.SPNVALUE.Name = "SPNVALUE"
		*< END OBJECT: ClassLib="thor_ui.vcx" BaseClass="container" />

	ADD OBJECT 'pgfThor.Basepage4.Hotkeylist1' AS hotkeylist WITH ;
		Height = 266, ;
		Name = "Hotkeylist1", ;
		Top = 2, ;
		Visible = .T., ;
		Width = 638, ;
		gridKeys.ColDescription.Header1.Name = "Header1", ;
		gridKeys.ColDescription.Name = "ColDescription", ;
		gridKeys.ColDescription.Text1.Name = "Text1", ;
		gridKeys.ColHotKey.Header1.Name = "Header1", ;
		gridKeys.ColHotKey.Name = "ColHotKey", ;
		gridKeys.ColHotKey.Text1.Name = "Text1", ;
		gridKeys.ColSource.Header1.Name = "Header1", ;
		gridKeys.ColSource.Name = "ColSource", ;
		gridKeys.ColSource.Text1.Name = "Text1", ;
		gridKeys.Height = 221, ;
		gridKeys.Left = 6, ;
		gridKeys.Name = "gridKeys", ;
		gridKeys.Top = 6, ;
		gridKeys.Width = 628, ;
		cmdToClipboard.Name = "cmdToClipboard", ;
		cmdToClipboard.Top = 234
		*< END OBJECT: ClassLib="thor_ui.vcx" BaseClass="container" />

	ADD OBJECT 'pgfThor.Basepage5.Startuptools1' AS startuptools WITH ;
		Height = 272, ;
		Name = "Startuptools1", ;
		Top = 2, ;
		Visible = .T., ;
		Width = 638, ;
		gridKeys.ColDescription.Header1.Name = "Header1", ;
		gridKeys.ColDescription.Name = "ColDescription", ;
		gridKeys.ColDescription.Text1.Name = "Text1", ;
		gridKeys.ColPrompt.Header1.Name = "Header1", ;
		gridKeys.ColPrompt.Name = "ColPrompt", ;
		gridKeys.ColPrompt.Text1.Name = "Text1", ;
		gridKeys.ColumnCheckBox.check1.Alignment = 0, ;
		gridKeys.ColumnCheckBox.check1.Name = "check1", ;
		gridKeys.ColumnCheckBox.Header1.Name = "Header1", ;
		gridKeys.ColumnCheckBox.Name = "ColumnCheckBox", ;
		gridKeys.Height = 260, ;
		gridKeys.Name = "gridKeys", ;
		gridKeys.Width = 626
		*< END OBJECT: ClassLib="thor_ui.vcx" BaseClass="container" />
	
	PROCEDURE addpemeditortools
		Lparameters toTree, lcParentKey, lnMenuID, raTools, lcFilter
		
		Local laMenuTools[1], lcHotKey, lcKey, lcKeystroke, lcMenuStatusBar, lcPRGName, lcPrompt
		Local lcStatusBar, llSeparator, lnHotKeyID, lnI, lnID, lnIndex, lnSubMenuID, loNode
		
		Select  MenuTools.Prompt					   ;
			  , Separator							   ;
			  , SubMenuID							   ;
			  , PRGName								   ;
			  , MenuTools.Id						   ;
			  , MenuDefinitions.HotKeyID			   ;
			From MenuTools							   ;
				Left Join MenuDefinitions			   ;
					On SubMenuID = MenuDefinitions.Id  ;
			Where MenuID = lnMenuID					   ;
			Order By MenuTools.sortorder			   ;
			Into Array laMenuTools
		
		For lnI = 1 To _Tally
			lcPrompt	= Alltrim (laMenuTools (lnI, 1))
			llSeparator	= laMenuTools (lnI, 2)
			lnSubMenuID	= laMenuTools (lnI, 3)
			lcPRGName	= Alltrim (laMenuTools (lnI, 4))
			lnID		= laMenuTools (lnI, 5)
			lnHotKeyID	= laMenuTools (lnI, 6)
		
			Do Case
				Case llSeparator
					*	loNode	   = toTree.Nodes.Add (lcParentKey, 4, lcParentKey + '\' + Str (lnID), Replicate('-', 30))
				Case lnSubMenuID # 0
					lcKey	 = lcParentKey + '\' + Chrtran (lcPrompt, '/\', '__')
					lcHotKey = Thisform.GetHotKeyDescription (lnHotKeyID)
					loNode	 = toTree.Nodes.Add (lcParentKey, 4, lcKey,	 ;
						  lcPrompt  + Iif (Empty (lcHotKey), '', ' (' + lcHotKey + ')'), ccIMAGE_MENU)
					This.AddPEMEditorTools (toTree, lcKey, lnSubMenuID, @raTools, lcFilter)
					loNode.Expanded = Not Empty (lcFilter)
				Otherwise
					If Empty (lcFilter) Or 0 # Ascan (raTools, lcPRGName, 6, -1, -1, 15)
						lcKey	= lcParentKey + '\' + Str (lnID)
						= Seek (Upper (lcPRGName), 'ToolHotKeyAssignments', 'PRGName')
						lcHotKey = Thisform.GetHotKeyDescription (ToolHotKeyAssignments.HotKeyID)
						loNode	= toTree.Nodes.Add (lcParentKey, 4, lcKey,	;
							  lcPrompt + Iif (Empty (lcHotKey), '', ' (' + lcHotKey + ')'), ccIMAGE_TOOL)
						lnIndex	= Thisform.oTools.GetKey (Upper (lcPRGName))
						If lnIndex > 0
							loNode.Tag = Thisform.oTools (lnIndex)
						Endif
					Endif
			Endcase
		Endfor
		
		If  toTree.Nodes (lcParentKey).Children = 0
			toTree.Nodes.Remove (lcParentKey)
		Endif
		
	ENDPROC

	PROCEDURE Destroy
		* Run Thor to update all hotkeys and menus.
		
		_Screen.oThorUI = .Null.
		This.oSelectTool = .Null.
		This.RunThor()
		
		* Close all tables.
		
		close tables all
		dodefault()
		
	ENDPROC

	PROCEDURE edittool		&& Edits the specified tool
		*==============================================================================
		* Method:			EditTool
		* Purpose:			Edits the specified tool
		* Author:			Doug Hennig
		* Last revision:	04/23/2011
		* Parameters:		tcPRGName - the name of the PRG to edit
		* Returns:			none
		* Environment in:	This.oThor contains a reference to a ThorEngine object
		* Environment out:	if the PRG is found, it's opened in an editor window
		*==============================================================================
		
		Lparameters tcPRGName
		Local lcFile, loPEME_Tools
		lcFile = This.oThor.FindFile (tcPRGName)
		If Empty (lcFile)
			Messagebox (Strtran (ccCANT_FIND, '%1', tcPRGName), MB_OK + MB_ICONSTOP,  ;
				  ccTHOR_CAPTION)
		Else
			Execscript (_Screen.cThorDispatcher, 'Thor_Proc_EditProc', lcFile)
		Endif Empty (lcFile)
		
	ENDPROC

	PROCEDURE gethotkeydescription
		Lparameters tnHotKeyID
		
		If Seek (tnHotKeyID, 'HotKeyDefinitions', 'ID')
			Return Trim (HotKeyDefinitions.Descript)
		Else
			Return ''
		Endif
		
	ENDPROC

	PROCEDURE help
		Local loLink
		loLink = Newobject('_ShellExecute', Home() + 'FFC\_Environ.vcx')
		loLink.ShellExecute(ThorHelpURL)
		
	ENDPROC

	PROCEDURE Init
		Lparameters toTools,  ;
			tcThorFolder
		With This
		
			With This.oImageList
				.ListImages.Add(1, ccIMAGE_MENU,  LoadPicture('Menus.ico'))
				.ListImages.Add(2, ccIMAGE_TOOL,  LoadPicture('Programs.ico'))
				.ListImages.Add(3, ccIMAGE_POPUP, LoadPicture('Popup.ico'))
			Endwith
		
			* Create a Thor_Engine object and open its tables.
		
			.oThor = Newobject ('Thor_Engine', 'Thor.vcx', '', tcThorFolder + 'Thor\')
			.oThor.OpenTables()
		
			* Set the caption.
		
			.Caption			= ccTHOR_CAPTION
			.lblVersion.Caption	= ccTHORVERSION
			.lblFolder.Caption  = Lower(tcThorFolder)
		
			* Save the passed parameters.
		
			.oTools		 = toTools
			.cThorFolder = tcThorFolder
		
			* Don't allow the form to be sized smaller than the default.
		
			.MinHeight = .Height
			.MinWidth  = .Width
		
			* Activate the first page so the TreeView loads.
			.nFontSize = .oThor.GetOption ('FontSize')
			.SetFontSize(.nFontSize)
		
			.pgfThor.ActivePage = 1
		
			.BindControls = .T.
		
		Endwith
		DoDefault()
		
	ENDPROC

	PROCEDURE loadtree		&& Loads the TreeView
		Lparameters toTree, tcFilter
		
		Local laPrev[1], laThis[1], laTools[1], lcCategory, lcFilter, lcHotKey, lcKey, lcPRGName
		Local lcParentKey, lcPrev, lcPreviousCategory, lcPrompt, lcSortKey, lcSource, lcSubCategory, lcThis
		Local lnI, lnJ, lnK, lnMax1, lnMax2, lnPersonalBackColor, lnPersonalForeColor, lnPrivateBackColor
		Local lnPrivateForeColor, lnSort, lnStart, lnToolCount, loNode, loTool, loTools
		
		lcFilter = Chrtran(tcFilter, ',.;:', '    ')
		toTree.Nodes.Clear()
		loTools		= Thisform.oTools
		lnToolCount	= 0
		
		lnPrivateBackColor = Nvl(This.oThor.GetOption ('PrivateBackColor'), cnDefaultPrivateBackColor)
		lnPrivateForeColor = Nvl(This.oThor.GetOption ('PrivateForeColor'), cnDefaultPrivateForeColor)
		
		lnPersonalBackColor	= Nvl(This.oThor.GetOption ('PersonalBackColor'), cnDefaultPersonalBackColor)
		lnPersonalForeColor	= Nvl(This.oThor.GetOption ('PersonalForeColor'), cnDefaultPersonalForeColor)
		
		For lnI = 1 To loTools.Count
			loTool		  = loTools.Item(lnI)
			lcSource	  = Evl(Trim(loTool.Source), '(No Source)')
			lcCategory	  = Evl(Trim(loTool.Category), lcSource)
			lcSubCategory = Trim(loTool.SubCategory)
			lnSort		  = Evl(loTool.Sort, 9999)
			lcSortKey	  = loTool.InternalSort
			lcPRGName	  = loTool.PRGName
		
			If FilterTool (lcFilter, loTool)
				lnToolCount = lnToolCount + 1
				Dimension laTools(lnToolCount, 6)
				laTools(lnToolCount, 1)	= lnI
				laTools(lnToolCount, 2)	= lcSource
				laTools(lnToolCount, 3)	= lcCategory
				laTools(lnToolCount, 4)	= lcSubCategory
				laTools(lnToolCount, 5)	= lcSortKey
				laTools(lnToolCount, 6)	= lcPRGName
			Endif
		Endfor
		
		If lnToolCount > 0
			Asort(laTools, 5)
			lcPreviousCategory = ''
		
			For lnI = 1 To lnToolCount
		
				loTool	   = loTools.Item(laTools(lnI, 1))
				lcSource   = laTools(lnI, 2)
				lcCategory = laTools(lnI, 3)
		
				*!* * Removed 2/3/2012
				*!* If lcSource == 'Thor'
				*!* 	Loop
				*!* Endif
		
				If Not lcCategory == lcPreviousCategory
					lnMax1 = Alines(laPrev, lcPreviousCategory, 5, '|')
					lnMax2 = Alines(laThis, lcCategory, 5, '|')
					If lnI = 1
						lnJ = 1
					Else
						lnStart	= 1 + Min(lnMax1, lnMax2)
						lcKey	= ''
						For lnJ = 1 To Min(lnMax1, lnMax2)
							lcPrev = laPrev[lnJ]
							lcThis = laThis[lnJ]
							If Not Upper(lcPrev) == Upper(lcThis)
								lnStart = lnJ
								Exit
							Endif
							lcKey = Upper(lcKey + Iif(lnJ > 1, '\', '') + lcThis)
						Endfor
					Endif
					For lnK = lnJ To lnMax2
						If lnK = 1
							lcKey			= Upper(laThis[1])
							loNode			= toTree.Nodes.Add(, 1, lcKey, laThis[1], ccIMAGE_MENU)
							loNode.Expanded	= .T.
							loNode.Bold		= .T.
						Else
							lcParentKey		= Upper(lcKey)
							lcKey			= Upper(lcParentKey + '\' + Chrtran(laThis[lnK], '.,;\/', '-----'))
							loNode			= toTree.Nodes.Add(lcParentKey, 4, lcKey, laThis[lnK], ccIMAGE_MENU)
							loNode.Expanded	= Not Empty(lcFilter)
						Endif
					Endfor
				Endif
		
				lcPrompt  = loTool.Prompt
				lcPRGName = loTool.PRGName
				= Seek(Upper(lcPRGName), 'ToolHotKeyAssignments', 'PRGName')
				lcHotKey = Thisform.GetHotKeyDescription(ToolHotKeyAssignments.HotKeyID)
				loNode	   = toTree.Nodes.Add(lcKey, 4, lcKey + '\' + lcPRGName			;
					  , lcPrompt + Iif(Empty(lcHotKey), '', ' (' + lcHotKey + ')'),  ccIMAGE_TOOL)
				Do Case
					Case loTool.PrivateCopy = 1
						loNode.ForeColor = m.lnPersonalForeColor
						loNode.BackColor = m.lnPersonalBackColor
					Case loTool.PrivateCopy = -1
						loNode.ForeColor = m.lnPrivateForeColor
						loNode.BackColor = m.lnPrivateBackColor
				Endcase
		
				loNode.Tag = loTool
		
				lcPreviousCategory = lcCategory
		
			Endfor && lnI = 1 To lnToolCount
		
		Else
		
			lcKey			 = 'No matches found'
			loNode			 = toTree.Nodes.Add(, 1, lcKey, lcKey, ccIMAGE_MENU)
			loNode.Bold		 = .T.
			loNode.ForeColor = Rgb(255, 0, 0)
		
		Endif
		
		Return
		
		************************************************************************************
		************************************************************************************
		
		Lparameters toTree, tcFilter
		
		
		toTree.Nodes.Clear()
		loTools		= Thisform.oTools
		lnToolCount	= 0
		lcFilter	= Upper (tcFilter)
		
		Do While lnToolCount = 0
			For lnI = 1 To loTools.Count
				loTool		  = loTools.Item (lnI)
				lcSource	  = Evl (Trim (loTool.Source), '(No Source)')
				lcCategory	  = Evl (Trim (loTool.Category), lcSource)
				lcSubCategory = Trim (loTool.SubCategory)
				lnSort		  = Evl(loTool.Sort, 9999)
				lcSortKey	  = loTool.InternalSort
				lcPRGName	  = loTool.PRGName
		
				If (Empty (lcFilter))		;
						Or lcFilter $ Upper (lcSortKey + lcSource + loTool.Summary + loTool.Description)
					lnToolCount = lnToolCount + 1
					Dimension laTools (lnToolCount, 6)
					laTools (lnToolCount, 1) = lnI
					laTools (lnToolCount, 2) = lcSource
					laTools (lnToolCount, 3) = lcCategory
					laTools (lnToolCount, 4) = lcSubCategory
					laTools (lnToolCount, 5) = lcSortKey
					laTools (lnToolCount, 6) = lcPRGName
				Endif
			Endfor
			If lnToolCount = 0
				Messagebox ([No matches to '] + tcFilter + [' found.  Showing all tools.], 16)
				lcFilter = ''
			Endif
		Enddo && while lnToolCount = 0
		
		Asort (laTools, 5)
		lcPreviousCategory = ''
		
		For lnI = 1 To lnToolCount
		
			loTool	   = loTools.Item (laTools (lnI, 1))
			lcSource   = laTools (lnI, 2)
			lcCategory = laTools (lnI, 3)
		
			*!* * Removed 2/3/2012 
			*!* If lcSource == 'Thor'
			*!* 	Loop
			*!* Endif
		
			If Not lcCategory == lcPreviousCategory
				lnMax1 = Alines (laPrev, lcPreviousCategory, 5, '|')
				lnMax2 = Alines (laThis, lcCategory, 5, '|')
				If lnI = 1
					lnJ = 1
				Else
					lnStart	= 1 + Min (lnMax1, lnMax2)
					lcKey	= ''
					For lnJ = 1 To Min (lnMax1, lnMax2)
						lcPrev = laPrev[lnJ]
						lcThis = laThis[lnJ]
						If Not Upper (lcPrev) == Upper (lcThis)
							lnStart = lnJ
							Exit
						Endif
						lcKey = Upper(lcKey + Iif (lnJ > 1, '\', '') + lcThis)
					Endfor
				Endif
				For lnK = lnJ To lnMax2
					If lnK = 1
						lcKey			= Upper(laThis[1])
						loNode			= toTree.Nodes.Add (, 1, lcKey, laThis[1], ccIMAGE_MENU)
						loNode.Expanded	= Not Empty (lcFilter)
						loNode.Bold		= .T.
					Else
						lcParentKey		= Upper(lcKey)
						lcKey			= Upper(lcParentKey + '\' + Chrtran(laThis[lnK], '.,;\/', '-----'))
						loNode			= toTree.Nodes.Add (lcParentKey, 4, lcKey, laThis[lnK], ccIMAGE_MENU)
						loNode.Expanded	= Not Empty (lcFilter)
					Endif
				Endfor
			Endif
		
			lcPrompt  = loTool.Prompt
			lcPRGName = loTool.PRGName
			= Seek (Upper (lcPRGName), 'ToolHotKeyAssignments', 'PRGName')
			lcHotKey = Thisform.GetHotKeyDescription (ToolHotKeyAssignments.HotKeyID)
			loNode	   = toTree.Nodes.Add (lcKey, 4, lcKey + '\' + lcPRGName		;
				  , lcPrompt + Iif (Empty (lcHotKey), '', ' (' + lcHotKey + ')'),  ccIMAGE_TOOL)
			loNode.Tag = loTool
		
			lcPreviousCategory = lcCategory
		
		Endfor && lnI = 1 To lnToolCount
		
		
		
	ENDPROC

	PROCEDURE notthorinternalmenu
		Do Case
			Case Trim (MenuDefinitions.PopupName) == 'Thor_Internal'
				Return .F.
			Case Trim (MenuDefinitions.PopupName) == ccRunAllTools
				Return .F.
			Otherwise
				Return .T.
		Endcase
	ENDPROC

	PROCEDURE openoptionspage
		Lparameters lcTool
		
		With This.pgfThor
			.ActivePage = 5
			If Not Empty(lcTool)
				Try
					.Pages[3].ThorOptions1.Selectitem(lcTool)
				Catch
		
				Endtry
			Endif
		Endwith
		
		
	ENDPROC

	PROCEDURE refreshtools		&& Refreshes the tools
		*==============================================================================
		* Method:			RefreshTools
		* Purpose:			Refreshes the tools
		* Author:			Doug Hennig
		* Last revision:	03/31/2011
		* Parameters:		none
		* Returns:			none
		* Environment in:	This.oTools.Tag contains the tools folder
		* Environment out:	the tools collection has been recreated and controls on the
		*						form refreshed
		*==============================================================================
		
		with This
			.oTools = .oThor.GetToolsCollection(.oTools.Tag)
			.lRefreshTools = .T.
			.lRefreshSelectToolTreeView = .T.
			.Refresh()
			.lRefreshTools = .F.
			messagebox(ccTOOLS_REFRESHED, MB_OK, ccTHOR_CAPTION)
		endwith
		
	ENDPROC

	PROCEDURE runthor		&& Runs Thor to update the hotkeys and menus
		*==============================================================================
		* Method:			RunThor
		* Purpose:			Runs Thor to update the hotkeys and menus
		* Author:			Doug Hennig
		* Last revision:	04/09/2011
		* Parameters:		none
		* Returns:			none
		* Environment in:	This.cThorFolder contains the Thor folder
		* Environment out:	Thor_Run has been instantiated and its Run method called
		*==============================================================================
		
		local lcApp, ;
			lcFolder, ;
			loRunThor
		lcApp	  = This.cThorFolder + 'Thor.App'
		lcFolder  = This.cThorFolder + 'Thor\'
		loRunThor = newobject ('Thor_Run', 'thor_run.vcx', '', lcApp, lcFolder)
		loRunThor.AddProperty('cApplication', lcApp)
		loRunThor.Run(.T.) && but no startups
		
		* Display a message if we're supposed to.
		
		if This.oThor.GetOption('UpdateMessage')
			messagebox (ccRUN_THOR_DONE, MB_OK, ccTHOR_CAPTION, 3000)
		endif This.oThor.GetOption('UpdateMessage')
		
		
	ENDPROC

	PROCEDURE setfontsize
		Lparameters tnFontSize
		
		Local lnFontsize
		lnFontsize = Nvl (tnFontSize, 8)
		With This
			.FontSize = lnFontsize
			.SetAll ('FontSize', lnFontsize)
			With .pgfThor
				.BASEPAGE1.omenu.oTree.Font.Size		= lnFontsize
				*	.BASEPAGE2.Toolkeys1.oList.Font.Size	= lnFontsize
				.BASEPAGE3.ThorOptions1.oList.Font.Size	= lnFontsize
			Endwith
		Endwith
	ENDPROC

	PROCEDURE cmdHelp.Click
		Thisform.Help()
		
	ENDPROC

	PROCEDURE cmdHelp.Init
		This.ToolTipText = ccHELP_TOOLTIP
		DoDefault()
		
	ENDPROC

	PROCEDURE cmdRefresh.Click
		Thisform.RefreshTools()
		
	ENDPROC

	PROCEDURE cmdRefresh.Init
		This.ToolTipText = ccTOOL_TOOLTIP
		DoDefault()
		
	ENDPROC

	PROCEDURE cmdRunThor.Click
		Local lnRecno
		lnRecno = Recno ('MenuDefinitions')
		
		Thisform.RunThor()
		
		Try
			Goto (lnRecno) In MenuDefinitions
		Catch
		
		Endtry
		
		
	ENDPROC

	PROCEDURE cmdRunThor.Init
		This.ToolTipText = ccTHOR_TOOLTIP
		DoDefault()
		
	ENDPROC

	PROCEDURE pgfThor.basepage1.Init
		This.Caption = ccMENU_DEFINITIONS
		dodefault()
		
	ENDPROC

	PROCEDURE pgfThor.Basepage2.Activate
		* This is here as a workaround for a weird issue that cause a ghost image to
		* appear when the Hot Key Assignments page is selected for the first time.
		
		dodefault()
		Thisform.Cls()
		
	ENDPROC

	PROCEDURE pgfThor.Basepage2.Init
		This.Caption = ccTOOL_DEFINITIONS
		dodefault()
		
	ENDPROC

	PROCEDURE pgfThor.Basepage3.Init
		This.Caption = ccOPTIONS
		dodefault()
		
	ENDPROC

	PROCEDURE pgfThor.Basepage4.Activate
		* This is here as a workaround for a weird issue that cause a ghost image to
		* appear when the Hot Key Assignments page is selected for the first time.
		
		dodefault()
		This.Hotkeylist1.LoadList()
		Thisform.Cls()
		
	ENDPROC

	PROCEDURE pgfThor.Basepage5.Activate
		* This is here as a workaround for a weird issue that cause a ghost image to
		* appear when the Hot Key Assignments page is selected for the first time.
		
		dodefault()
		This.Startuptools1.LoadList()
		Thisform.Cls()
		
	ENDPROC

ENDDEFINE
